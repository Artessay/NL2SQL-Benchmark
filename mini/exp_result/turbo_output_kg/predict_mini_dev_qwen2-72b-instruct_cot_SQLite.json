{
    "0": "SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS REAL) / SUM(IIF(Currency = 'CZK', 1, 0)) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date BETWEEN '201201' AND '201212' AND T1.Segment = 'LAM' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT (SELECT SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012' AND T1.Currency = 'CZK') - (SELECT SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012' AND T1.Currency = 'EUR')\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT strftime('%Y', Date) FROM yearmonth WHERE Currency = 'CZK' GROUP BY strftime('%Y', Date) ORDER BY SUM(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT T2.Date FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n(SELECT SUM(CASE WHEN T2.Segment = 'SME' THEN T1.Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN T2.Segment = 'SME' THEN T1.CustomerID ELSE NULL END) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '201301' AND '201312') - \n(SELECT SUM(CASE WHEN T2.Segment = 'LAM' THEN T1.Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN T2.Segment = 'LAM' THEN T1.CustomerID ELSE NULL END) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '201301' AND '201312') AS SME_LAM,\n(SELECT SUM(CASE WHEN T2.Segment = 'LAM' THEN T1.Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN T2.Segment = 'LAM' THEN T1.CustomerID ELSE NULL END) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '201301' AND '201312') - \n(SELECT SUM(CASE WHEN T2.Segment = 'KAM' THEN T1.Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN T2.Segment = 'KAM' THEN T1.CustomerID ELSE NULL END) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '201301' AND '201312') AS LAM_KAM,\n(SELECT SUM(CASE WHEN T2.Segment = 'KAM' THEN T1.Consumption ELSE 0 END) / COUNT(DISTINCT CASE WHEN T2.Segment = 'KAM' THEN T1.CustomerID ELSE NULL END) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT T1.Segment, ((T2.Consumption2013 - T2.Consumption2012) / T2.Consumption2013) * 100 AS PercentageIncrease FROM customers AS T1 INNER JOIN (SELECT CustomerID, SUM(CASE WHEN Date LIKE '2013%' THEN Consumption ELSE 0 END) AS Consumption2013, SUM(CASE WHEN Date LIKE '2012%' THEN Consumption ELSE 0 END) AS Consumption2012 FROM yearmonth GROUP BY CustomerID) AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment IN ('SME', 'LAM', 'KAM') AND T2.Consumption2013 <> 0 ORDER BY PercentageIncrease DESC, PercentageIncrease ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Segment = 'Discount' AND Country = 'CZE') - (SELECT COUNT(*) FROM gasstations WHERE Segment = 'Discount' AND Country = 'SVK')\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR')\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST(SUM(IIF(T2.Consumption > 46.73, 1, 0)) AS REAL) * 100 / COUNT(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE SUBSTR(Date, 1, 6) = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT T2.Description FROM yearmonth AS T1 INNER JOIN products AS T2 ON T1.CustomerID = T2.ProductID WHERE T1.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT T2.Country FROM yearmonth AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.GasStationID WHERE T1.Date LIKE '201306%' GROUP BY T2.Country\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID INNER JOIN gasstations AS T3 ON T3.GasStationID = T2.GasStationID WHERE T3.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Price = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(SUM(IIF(T2.Currency = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SELECT T2.Consumption FROM (SELECT T1.CustomerID, SUM(T1.Amount * T1.Price) AS Consumption FROM transactions_1k AS T1 WHERE T1.Date LIKE '2012-%' AND T1.CustomerID = (SELECT T3.CustomerID FROM transactions_1k AS T3 WHERE T3.Date = '2012-08-25' AND T3.Price * T3.Amount = 634.8) GROUP BY T1.CustomerID) AS T2 WHERE T2.CustomerID = (SELECT T3.CustomerID FROM transactions_1k AS T3 WHERE T3.Date = '2012-08-25' AND T3.Price * T3.Amount = 634.8)) - (SELECT T4.Consumption FROM (SELECT T1.CustomerID, SUM(T1.Amount * T1.Price) AS Consumption FROM transactions_1k AS T1 WHERE T1.Date LIKE '2013-%' AND T1.CustomerID = (SELECT T3.CustomerID FROM transactions_1k AS T3 WHERE T3.Date = '2012-08-25' AND T3.Price * T3.Amount = 634.8) GROUP BY T1.CustomerID) AS T4 WHERE T4.CustomerID = (SELECT T3.CustomerID FROM transactions_1k AS T3 WHERE T3.Date = '2012-08-25' AND T3.Price * T3.Amount = 634.8)) / (SELECT T2.Consumption FROM (SELECT T1.CustomerID, SUM(T1.Amount * T1.Price) AS Consumption FROM transactions_1k AS T1 WHERE T1.Date LIKE '2012-%' AND T1.CustomerID = (SELECT T3.CustomerID FROM transactions_1k AS T3 WHERE T3.Date = '2012-08-25' AND T3.Price * T3.Amount = 634.8) GROUP BY T1.CustomerID) AS T2 WHERE T2.CustomerID = (SELECT T3.CustomerID FROM transactions_1k AS T3 WHERE T3.Date = '2012-08-25' AND T3.Price * T3.Amount = 634.8))\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(SUM(IIF(T2.Segment = 'premium', 1, 0)) AS REAL) * 100 / COUNT(T2.Segment) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(T1.Amount) FROM `transactions_1k` AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CustomerID = 38508 AND strftime('%Y%m', T1.Date) = '201201'\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT T1.CustomerID, T2.Currency, SUM(T1.Price) / SUM(T1.Amount) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T1.Price * T1.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.ProductID = 5 AND T2.Price / T2.Amount > 29 AND T1.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) FROM (SELECT T1.event_id FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 10 AND T1.type = 'Meeting')\t----- bird -----\tstudent_club",
    "33": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 EXCEPT SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'fundraiser' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT T2.approved FROM event AS T1 INNER JOIN budget AS T3 ON T1.event_id = T3.link_to_event INNER JOIN expense AS T2 ON T3.budget_id = T2.link_to_budget WHERE T1.event_name = 'October Meeting' AND T1.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND strftime('%m', T2.expense_date) IN ('09', '10')\t----- bird -----\tstudent_club",
    "38": "SELECT (SELECT SUM(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE SUBSTR(T1.event_date, 1, 4) = '2019') - (SELECT SUM(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE SUBSTR(T1.event_date, 1, 4) = '2020')\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT T2.event_status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.event_name = 'October Meeting' THEN T2.amount ELSE 0 END) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY T2.spent / T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT T2.first_name, T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T1.link_to_member HAVING COUNT(T1.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT T3.first_name, T3.last_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member WHERE T1.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent IS NOT NULL ORDER BY T2.spent ASC LIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) AS REAL) * 100 / SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget\t----- bird -----\tstudent_club",
    "59": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT T2.link_to_member FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT T2.cost FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_member WHERE T1.event_name = 'September Speaker' AND T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining ASC LIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T3 ON T1.event_id = T3.link_to_event INNER JOIN expense AS T2 ON T3.budget_id = T2.link_to_budget WHERE T1.event_name = 'October Meeting' AND T2.approved = 'TRUE'\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(T2.amount), T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id ='rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "69": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT T2.last_name, T1.department, T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT T2.first_name, T2.last_name, T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT CAST((SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.Admission = '+') AS REAL) * 100 / (SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.Admission = '-') - (SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.Admission = '-') * 100 / (SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.Admission = '+')\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(SUM(CASE WHEN strftime('%Y', T1.Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Admission = '-' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT T1.ID, (strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday)) as Age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F' AND strftime('%Y', T1.Description) = '1997' AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Thrombosis = 1 AND strftime('%Y', T2.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT T1.Symptoms, T2.Diagnosis FROM (SELECT Symptoms, ID FROM Examination WHERE Symptoms IS NOT NULL ORDER BY (SELECT Birthday FROM Patient WHERE ID = Examination.ID) ASC LIMIT 1) T1 INNER JOIN Patient T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT T1.FirstDate - T1.Birthday AS Age, T1.FirstDate FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' ORDER BY T1.Birthday LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(IIF(T2.SEX = 'M' AND T1.UA <= 8.0, 1, 0)) AS REAL) / SUM(IIF(T2.SEX = 'F' AND T1.UA <= 6.5, 1, 0)) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE CAST(strftime('%Y', T2.`Examination Date`) AS INTEGER) BETWEEN 1990 AND 1993 AND CAST(strftime('%Y', T1.Birthday) AS INTEGER) + 18 > CAST(strftime('%Y', T2.`Examination Date`) AS INTEGER)\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT T2.Examination_Date - T1.Birthday AS Age,  T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.HGB = ( SELECT MAX(T2.HGB) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID )\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT T1.aCL_IgM FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.Description = '1994-02-19' AND T1.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT CAST((SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T2.Date) = '1981-11' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T2.Date) = '1981-12' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T2.Date) = '1981-12' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T1.GPT > 30 AND T1.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2 AND T2.ANA = 'S' AND T2.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.SEX) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'RA' AND strftime('%Y', T1.Birthday) = '1980'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE WHEN T2.SEX = 'M' AND T1.UA > 8.0 THEN 'Yes' WHEN T2.SEX = 'F' AND T1.UA > 6.5 THEN 'Yes' ELSE 'No' END AS Result FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT T2.Diagnosis FROM (SELECT T1.ID, T1.GPT, T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID) AS T1 WHERE T1.GPT > 60 ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT GROUP_CONCAT(DISTINCT T1.SEX),  T2.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T2.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(CAST(strftime('%Y', 'now') - strftime('%Y', T2.Birthday) AS REAL)) FROM (SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` >= 250 AND T2.SEX = 'M') AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CPK >= 250 AND strftime('%Y', T1.Birthday) BETWEEN '1936' AND '1956'\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT T2.ID, T2.SEX, (strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GLU >= 180 AND T1.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT T1.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5 GROUP BY T1.ID, T1.Birthday ORDER BY T1.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT T1.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT >= 52 GROUP BY T1.ID HAVING COUNT(T1.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT SUM(CASE WHEN T2.PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT > 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT <= 100 OR T2.PLT >= 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) < 50 AND strftime('%Y', T2.Date) = '1984'\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SEX) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T2.Date) - strftime('%Y', T1.Birthday) > 55 AND T2.PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.IGG BETWEEN 900 AND 2000 AND T3.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND strftime('%Y', T1.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT T1.Diagnosis FROM (SELECT Diagnosis, COUNT(Diagnosis) AS c FROM (SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM <= 40 OR T2.IGM >= 400) GROUP BY Diagnosis) AS T1 ORDER BY T1.c DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP = '+' AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND (YEAR(CURDATE()) - YEAR(T1.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IN ('-', '0') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('-','+-') AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.`SC170` IN('negative', '0') AND T2.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-') AND T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60 ORDER BY T2.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+') AND T1.CPK < 250\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T2.name FROM (SELECT league_id, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match WHERE season = '2015/2016' GROUP BY league_id) AS T1 JOIN League AS T2 ON T1.league_id = T2.id ORDER BY total_goals DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name FROM (SELECT away_team_api_id, COUNT(*) AS wins FROM Match WHERE season = '2009/2010' AND away_team_goal > home_team_goal GROUP BY away_team_api_id ORDER BY wins DESC LIMIT 1) AS subquery JOIN Team T ON subquery.away_team_api_id = T.team_api_id\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT T2.name FROM (SELECT league_id, COUNT(*) AS draw_matches FROM Match WHERE season = '2015/2016' AND home_team_goal = away_team_goal GROUP BY league_id) AS T1 JOIN League AS T2 ON T1.league_id = T2.id ORDER BY draw_matches DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT DISTINCT T1.player_api_id, (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) AS age FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND strftime('%Y', T2.date) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "133": "SELECT T2.name, COUNT(T1.league_id) AS match_count FROM `Match` AS T1 JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T1.league_id ORDER BY match_count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT T1.team_fifa_api_id FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed > 50 AND T2.buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012') AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(CASE WHEN T2.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.preferred_foot) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE strftime('%Y', T1.birthday) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180 GROUP BY T2.player_name ORDER BY AVG(T1.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT T2.name FROM (SELECT T1.league_id, SUM(T1.home_team_goal) / COUNT(DISTINCT T1.id) AS home_avg, SUM(T1.away_team_goal) / COUNT(DISTINCT T1.id) AS away_avg FROM Match T1 WHERE T1.season = '2009/2010' GROUP BY T1.league_id) T1 INNER JOIN League T2 ON T1.league_id = T2.id WHERE T1.home_avg > T1.away_avg\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE birthday LIKE '1970-10%'\t----- bird -----\teuropean_football_2",
    "141": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(T2.home_team_goal) FROM Country AS T1 INNER JOIN Match AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Poland' AND T2.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT T2.player_name, AVG(T1.finishing) as avg_finishing FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height = (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) GROUP BY T2.player_name ORDER BY avg_finishing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 170 AND strftime('%Y', T2.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.id ELSE NULL END)) - (SUM(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.id ELSE NULL END)) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.volleys > 70 AND T1.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match WHERE date LIKE '2009-04%' AND league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\t----- bird -----\teuropean_football_2",
    "152": "SELECT T2.name FROM (SELECT T1.league_id, COUNT(T1.league_id) AS count FROM `Match` T1 WHERE T1.season = '2008/2009' GROUP BY T1.league_id) T1 JOIN League T2 ON T1.league_id = T2.id ORDER BY T1.count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT (CAST((SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ariel Borysiuk') - (SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Paulin Puel') AS REAL) * 100 / (SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Paulin Puel'))\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(T2.chanceCreationPassing), T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date = '2016-06-23' AND T2.overall_rating = 77 ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT T2.date FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' AND T2.crossing = ( SELECT MAX(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' )\t----- bird -----\teuropean_football_2",
    "160": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T2.team_api_id = T1.team_api_id WHERE T2.team_long_name = 'FC Lorient' AND T1.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT T1.defenceAggressionClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T2.team_api_id = T1.team_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND SUBSTR(T2.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT CAST((SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating END) - SUM(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating END)) AS REAL) * 100 / SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "165": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.strength = ( SELECT MAX(T2.strength) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id )\t----- bird -----\teuropean_football_2",
    "166": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "172": "SELECT T1.home_team_goal, T1.away_team_goal FROM `Match` AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "173": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T2.team_api_id = T1.team_api_id WHERE T2.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT T2.finishing, T2.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT T2.name FROM (SELECT T1.league_id, COUNT(T1.id) AS game_count FROM `Match` T1 WHERE T1.season = '2015/2016' GROUP BY T1.league_id ORDER BY game_count DESC LIMIT 4) T3 JOIN League T2 ON T3.league_id = T2.id\t----- bird -----\teuropean_football_2",
    "176": "SELECT T2.team_long_name FROM `Match` AS T1 INNER JOIN `Team` AS T2 ON T2.team_api_id = T1.away_team_api_id WHERE T1.away_team_goal = (SELECT MAX(away_team_goal) FROM `Match`)\t----- bird -----\teuropean_football_2",
    "177": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "179": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 20 ORDER BY T2.q1 DESC LIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 IS NOT NULL ORDER BY T2.q2 ASC LIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.raceId = 354 AND T3.forename = 'Bruno' AND T3.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 903 AND T1.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time LIKE '01:27%' AND T1.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 LIKE '1:%' AND T2.raceId = 45\t----- bird -----\tformula_1",
    "192": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time <> '' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results )\t----- bird -----\tformula_1",
    "195": "SELECT CAST((T1.fastestLapSpeed - T2.fastestLapSpeed) AS REAL) * 100 / T1.fastestLapSpeed FROM (SELECT fastestLapSpeed FROM results WHERE raceId = 853 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS T1, (SELECT fastestLapSpeed FROM results WHERE raceId = 854 AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS T2\t----- bird -----\tformula_1",
    "196": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT T2.name FROM (SELECT MIN(date) AS mindate FROM races) AS T1 JOIN races AS T2 ON strftime('%Y', T2.date) = strftime('%Y', T1.mindate) AND strftime('%m', T2.date) = strftime('%m', T1.mindate)\t----- bird -----\tformula_1",
    "198": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.points = ( SELECT MAX(points) FROM results )\t----- bird -----\tformula_1",
    "199": "SELECT T1.forename, T1.surname, T3.name FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T2(milliseconds) = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "200": "SELECT AVG(T3.milliseconds) FROM (SELECT T1.driverId FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Malaysian Grand Prix' AND T3.year = 2009) AS T4 INNER JOIN lapTimes AS T3 ON T4.driverId = T3.driverId WHERE T3.raceId IN (SELECT raceId FROM races WHERE name = 'Malaysian Grand Prix' AND year = 2009)\t----- bird -----\tformula_1",
    "201": "SELECT CAST(SUM(IIF(T2.position > 1, 1, 0)) AS REAL) * 100 / COUNT(T2.position) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT T1.forename, T1.surname, T1.nationality, MAX(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY SUM(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT T1.forename, T1.surname, strftime('%Y', 'now') - strftime('%Y', T1.dob) AS age FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT T1.name, T2.name, T2.location FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%Y', T1.date) = '2005' AND strftime('%m', T1.date) = '09'\t----- bird -----\tformula_1",
    "205": "SELECT T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT T3.name, T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' ORDER BY T2.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT T1.year, T3.points FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT CAST(SUM(IIF(T2.country = 'Germany', 1, 0)) AS REAL) * 100 / COUNT(T2.country) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(T1.dob) FROM drivers AS T1)\t----- bird -----\tformula_1",
    "212": "SELECT T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2007 AND T2.position = 1\t----- bird -----\tformula_1",
    "213": "SELECT T2.name FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "215": "SELECT T3.positionOrder FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Chinese Grand Prix' AND T3.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Chinese Grand Prix' AND T2.year = 2008 AND T1.position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Chinese Grand Prix' AND T1.time <> ''\t----- bird -----\tformula_1",
    "218": "SELECT (CAST((T1.milliseconds - T2.milliseconds) AS REAL) / T2.milliseconds) * 100 FROM (SELECT milliseconds FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1) AS T1, (SELECT milliseconds FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND time IS NOT NULL)) AS T2\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 291 AND T2.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(T1.constructorId) FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Japanese' AND T1.points = 0 GROUP BY T1.constructorId HAVING COUNT(T1.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT CAST(SUM(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.time) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T1.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT AVG(CAST(REPLACE(SUBSTR(T2.time, 7, LENGTH(T2.time)), '.', '') AS REAL)) / 1000 FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year < 1975 AND T2.position = 1 AND T2.time NOT NULL\t----- bird -----\tformula_1",
    "225": "SELECT T2.fastestLap FROM (SELECT raceId, driverId, MIN(milliseconds) AS fastest_time FROM results WHERE year = 2009 GROUP BY raceId) AS T1 JOIN (SELECT raceId, driverId, fastestLap, milliseconds FROM results WHERE year = 2009) AS T2 ON T1.raceId = T2.raceId AND T1.fastest_time = T2.milliseconds WHERE T1.driverId = T2.driverId GROUP BY T2.driverId ORDER BY COUNT(T1.driverId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT CAST(SUM(CASE WHEN T2.dob < '1985-01-01' AND T1.laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2000 AND 2005)\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '02:00.00'\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT COUNT(*) FROM (SELECT T1.driverId FROM drivers AS T1 INNER JOIN (SELECT driverId, dob FROM drivers ORDER BY dob DESC LIMIT 3) AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Dutch')\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE statusId = 2 AND raceId BETWEEN 50 AND 100 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT T3.year, T3.name, T3.date, T3.time FROM (SELECT T1.driverId, MIN(T2.date) AS mindate FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId GROUP BY T1.driverId) AS T1 INNER JOIN races AS T2 ON T1.mindate = T2.date INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId INNER JOIN seasons AS T4 ON T2.year = T4.year WHERE T3.dob = (SELECT driverId FROM (SELECT driverId, MIN(dob) AS mindob FROM drivers GROUP BY driverId) AS T1 INNER JOIN (SELECT driverId, MIN(date) AS mindate FROM qualifying GROUP BY driverId) AS T2 ON T1.driverId = T2.driverId) ORDER BY T3.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN (SELECT driverId, AVG(CAST(SUBSTR(duration, 3, 2) AS REAL) + CAST(SUBSTR(duration, 6, 2) AS REAL) / 60) AS avg_duration FROM pitStops GROUP BY driverId ORDER BY avg_duration ASC LIMIT 3) AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND strftime('%Y', T1.dob) BETWEEN '1980' AND '1985'\t----- bird -----\tformula_1",
    "237": "SELECT T1.time FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2008 AND T2.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT T3.constructorRef, T3.url FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T1.year = 2009 AND T1.name = 'Singapore Grand Prix' ORDER BY T2.time LIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT T1.name, T1.nationality, SUM(T2.points) AS total_points FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T1.constructorId ORDER BY total_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2008 AND T1.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit') AND T2.position = 1 AND T2.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit')))\t----- bird -----\tformula_1",
    "242": "SELECT T1.forename, T1.surname, T1.nationality, T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = (SELECT MAX(T1.dob) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId)\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) FROM results WHERE statusId = 3 AND raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = ( SELECT MIN(T1.time) FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId ) LIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ORDER BY T1.time LIMIT 1\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T4.colour = 'Blue' AND T3.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics' GROUP BY T2.colour ORDER BY COUNT(T1.id) DESC\t----- bird -----\tsuperhero",
    "251": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.power_name = 'Super Strength' AND T4.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "252": "SELECT T3.publisher_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN publisher AS T3 ON T3.id = T1.hero_id WHERE T2.attribute_name = 'Speed' ORDER BY T1.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "254": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T1.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero",
    "259": "SELECT CAST(SUM(CASE WHEN T1.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.alignment), SUM(CASE WHEN T3.publisher_name = 'Marvel Comics' AND T1.alignment = 'Bad' THEN 1 ELSE 0 END) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id\t----- bird -----\tsuperhero",
    "260": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(T2.weight_kg) FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id WHERE T1.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id INNER JOIN gender AS T4 ON T4.id = T1.gender_id WHERE T4.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'No Colour' AND T1.height_cm BETWEEN 170 AND 190\t----- bird -----\tsuperhero",
    "266": "SELECT T3.colour FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T1.height_cm = 185 AND T2.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.publisher_name) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(T1.weight_kg) * 0.79 FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male')\t----- bird -----\tsuperhero",
    "269": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(T1.hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id WHERE T3.attribute_name ='strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT T2.colour, T4.colour, T6.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T4 ON T1.hair_colour_id = T4.id INNER JOIN colour AS T6 ON T1.skin_colour_id = T6.id INNER JOIN publisher AS T8 ON T1.publisher_id = T8.id INNER JOIN gender AS T9 ON T1.gender_id = T9.id WHERE T8.publisher_name = 'Dark Horse Comics' AND T9.gender = 'Female'\t----- bird -----\tsuperhero",
    "274": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT CAST(SUM(IIF(T2.colour = 'Blue', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN colour AS T2 ON T2.id = T1.skin_colour_id WHERE T3.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero WHERE height_cm IS NOT NULL\t----- bird -----\tsuperhero",
    "284": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT T.publisher_name FROM (SELECT publisher_id FROM superhero WHERE superhero_name = 'Hawkman' INTERSECT SELECT publisher_id FROM superhero WHERE superhero_name = 'Karate Kid' INTERSECT SELECT publisher_id FROM superhero WHERE superhero_name = 'Speedy') AS T JOIN publisher ON T.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(SUM(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT CAST(SUM(CASE WHEN T2.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id\t----- bird -----\tsuperhero",
    "291": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7 AND (weight_kg = 0 OR weight_kg IS NULL)) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1 AND (weight_kg = 0 OR weight_kg IS NULL))\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Green')\t----- bird -----\tsuperhero",
    "294": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT T3.gender FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') AND Reputation = (SELECT MAX(Reputation) FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon'))\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT T2.LastEditorDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(T2.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 3025 AND T1.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN T2.ClosedDate IS NULL THEN 'not well-finished' ELSE 'well-finished' END FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(T3.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId LEFT JOIN votes AS T3 ON T1.Id = T3.UserId WHERE T1.Id = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT T3.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN comments AS T3 ON T1.Id = T3.PostId WHERE T1.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND T2.PostHistoryTypeId = 4\t----- bird -----\tcodebase_community",
    "318": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(T1.ViewCount), T1.Title, T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Tags LIKE '%<humor>%' GROUP BY T1.Id, T2.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) FROM (SELECT UserId, COUNT(*) AS badge_count FROM badges GROUP BY UserId HAVING badge_count > 5)\t----- bird -----\tcodebase_community",
    "321": "SELECT T2.UserId FROM (SELECT PostId, COUNT(*) AS num FROM postHistory GROUP BY PostId) AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.num = 1 AND T2.ViewCount >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT (CAST(SUM(CASE WHEN strftime('%Y', T1.Date) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Name) - CAST(SUM(CASE WHEN strftime('%Y', T1.Date) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Name)) AS percentage_difference FROM badges AS T1 WHERE T1.Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT CAST(SUM(T1.UpVotes) AS REAL) / COUNT(T1.Id) AS AvgUpVotes, CAST(SUM(T1.Age) AS REAL) / COUNT(T1.Id) AS AvgAge FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId GROUP BY T1.Id HAVING COUNT(T2.Id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(SUM(CASE WHEN strftime('%Y', T1.CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN strftime('%Y', T1.CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes AS T1\t----- bird -----\tcodebase_community",
    "325": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName ='slashnick' AND T1.PostTypeId = 1 ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT OwnerUserId, SUM(ViewCount) AS TotalViewCount FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder') GROUP BY OwnerUserId ORDER BY TotalViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT T3.TagName FROM posts AS T1 INNER JOIN posts AS T2 ON T1.ParentId = T2.Id INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T1.CommentCount = 0 AND T1.OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes')\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN postTags AS T4 ON T1.Id = T4.PostId INNER JOIN tags AS T3 ON T3.Id = T4.TagId WHERE T2.DisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT (SELECT SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mornington') - (SELECT SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Amos')\t----- bird -----\tcodebase_community",
    "330": "SELECT CAST(COUNT(T2.Id) AS REAL) / 12 FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T1.AnswerCount <= 2 AND STRFTIME('%Y', T2.CreationDate) = '2010' GROUP BY STRFTIME('%m', T2.CreationDate)\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(T2.CreationDate) FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2010' ORDER BY T1.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT CAST(SUM(CASE WHEN T2.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "337": "SELECT T2.ViewCount, T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Body LIKE '%Computer Game Datasets%'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts))\t----- bird -----\tcodebase_community",
    "339": "SELECT T2.Text, T2.UserId, T2.CreationDate, T1.DisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T3.Id = T2.PostId WHERE T3.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(SUM(CASE WHEN Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE Reputation = (SELECT MAX(Reputation) FROM users))\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName ='sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) FROM posts WHERE CommentCount = 1 AND EXISTS(SELECT 1 FROM comments WHERE comments.PostId = posts.Id AND Score = 0)\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(SUM(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.UpVotes) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "346": "SELECT name FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NULL\t----- bird -----\tcard_games",
    "348": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'gladiator' AND T2.status = 'Banned' AND T1.rarity ='mythic'\t----- bird -----\tcard_games",
    "349": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power = '*' AND T2.format = 'commander' AND T2.status = 'Legal' OR T1.power IS NULL AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT T1.id, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T2.uuid ORDER BY COUNT(T2.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.language) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards\t----- bird -----\tcard_games",
    "358": "SELECT CAST(SUM(IIF(T2.language = 'French', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes!= 'Angel'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT T1.uuid FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.colors = 'B' AND T1.originalType LIKE '%Artifact%'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability ='mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards UNION SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT T1.supertypes, T1.subtypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'premodern' AND T1.side IS NULL AND EXISTS(SELECT * FROM rulings AS T3 WHERE T3.uuid = T1.uuid AND T3.text = 'This is a triggered mana ability.')\t----- bird -----\tcard_games",
    "369": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.artist = 'Matthew D. Wilson' AND T2.language = 'French' AND T1.type = 'Creature'\t----- bird -----\tcard_games",
    "370": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT CAST(SUM(IIF(T2.language = 'French', 1, 0)) AS REAL) * 100 / COUNT(T1.power) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT T1.language FROM foreign_data AS T1 WHERE T1.multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards\t----- bird -----\tcard_games",
    "375": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.mcmName = 'Archenemy' AND T1.setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper'))\t----- bird -----\tcard_games",
    "378": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT T2.id FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.mtgoCode IS NOT NULL AS appear_on_mtgo FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT T1.isForeignOnly FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Italian' AND T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT T2.text FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T1.setCode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Italian' AND T1.setName = 'Coldsnap' AND T1.convertedManaCost = ( SELECT MAX(convertedManaCost) FROM cards WHERE setName = 'Coldsnap' )\t----- bird -----\tcard_games",
    "391": "SELECT CAST(SUM(IIF(T1.convertedManaCost = 7, 1, 0)) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(IIF(T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.name) FROM cards AS T1 WHERE T1.setName = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT T1.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format ORDER BY COUNT(T1.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal' GROUP BY T3.format\t----- bird -----\tcard_games",
    "396": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T1.name NOT IN ( SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' )\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT T1.frameVersion, T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(T1.element = 'o') as avg_oxygen FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' GROUP BY T3.bond_id\t----- bird -----\ttoxicology",
    "400": "SELECT CAST(SUM(CASE WHEN T3.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T4.label = '+'\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9' UNION SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=' GROUP BY T1.element\t----- bird -----\ttoxicology",
    "405": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT T2.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a1.atom_id) FROM atom AS a1 JOIN connected AS c1 ON a1.atom_id = c1.atom_id JOIN bond AS b1 ON c1.bond_id = b1.bond_id WHERE (a1.element = 'i' OR a1.element ='s') AND b1.bond_type = '-' UNION SELECT COUNT(DISTINCT a2.atom_id) FROM atom AS a2 JOIN connected AS c2 ON a2.atom_id = c2.atom_id2 JOIN bond AS b2 ON c2.bond_id = b2.bond_id WHERE (a2.element = 'i' OR a2.element ='s') AND b2.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT CAST(SUM(IIF(T1.element!= 'f' OR T1.element IS NULL, 1, 0)) AS REAL) * 100 / COUNT(DISTINCT T3.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T3.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "411": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR000' ORDER BY T1.element LIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR008' LIMIT 1\t----- bird -----\ttoxicology",
    "413": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) FROM molecule LIMIT 1\t----- bird -----\ttoxicology",
    "414": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.molecule_id = 'TR206' GROUP BY T1.molecule_id HAVING COUNT(T1.atom_id) > 0 LIMIT 1\t----- bird -----\ttoxicology",
    "415": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060' UNION SELECT T2.label FROM molecule AS T2 WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT T2.bond_type, COUNT(T2.bond_type) AS bond_count FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR010' GROUP BY T2.bond_type ORDER BY bond_count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' ORDER BY T1.molecule_id LIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')\t----- bird -----\ttoxicology",
    "419": "SELECT T2.bond_type, T3.atom_id, T4.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T1.atom_id = T3.atom_id JOIN atom AS T4 ON T1.atom_id2 = T4.atom_id WHERE T2.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(T2.bond_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.atom_id LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND SUBSTR(T2.atom_id, 7, 2) BETWEEN '21' AND '25' GROUP BY T1.molecule_id\t----- bird -----\ttoxicology",
    "423": "SELECT T3.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T1.element = 'p' AND T4.element = 'n' UNION SELECT T3.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T1.element = 'n' AND T4.element = 'p'\t----- bird -----\ttoxicology",
    "424": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type ='=' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'I'\t----- bird -----\ttoxicology",
    "426": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id NOT IN (SELECT T2.atom_id FROM connected AS T2) AND T1.atom_id NOT IN (SELECT T3.atom_id2 FROM connected AS T3)\t----- bird -----\ttoxicology",
    "427": "SELECT T3.atom_id, T3.atom_id2 FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.bond_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.label = 'TR041' AND T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "428": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19' UNION SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#' GROUP BY T1.element\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#' AND atom.element IN ('p', 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11' UNION SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element) AS ratio,  T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT T1.molecule_id FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) FROM satscores WHERE AvgScrMath > 400 AND cds IN (SELECT CDSCode FROM schools WHERE Virtual = 'F')\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(T1.`Free Meal Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 / T2.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 AND T2.CharterNum IS NOT NULL ORDER BY T1.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT T2.School, T2.Street, T2.City, T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T3.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Riverside' AND T2.AvgScrMath > 400 GROUP BY T1.FundingType\t----- bird -----\tcalifornia_schools",
    "445": "SELECT T1.School, T1.Street, T1.City, T1.State, T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`County Name` = 'Monterey' AND T2.`High Grade` = '12' AND T2.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT T2.AvgScrWrite, T1.School, T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate > '1991-01-01' OR T1.ClosedDate < '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT T2.School, T2.DOCType FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Enrollment (K-12) - T1.Enrollment (Ages 5-17) > (SELECT AVG(Enrollment (K-12) - Enrollment (Ages 5-17)) FROM frpm WHERE T1.FundingType = 'Local') AND T1.FundingType = 'Local'\t----- bird -----\tcalifornia_schools",
    "448": "SELECT T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 10 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT T1.`Percent (%) Eligible FRPM (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = '66' ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Fresno' AND T1.OpenDate LIKE '1980%'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'FRESNO UNIFIED' AND T2.AvgScrRead IS NOT NULL ORDER BY T2.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' GROUP BY T2.County, T2.School ORDER BY AVG(T1.AvgScrRead) DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT T2.School, T1.AvgScrWrite FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T2.School, T1.AvgScrWrite\t----- bird -----\tcalifornia_schools",
    "456": "SELECT T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = '31' AND T2.`Enrollment (K-12)` IS NOT NULL ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT CAST(COUNT(*) AS REAL) / 12 FROM schools WHERE County = 'Alameda' AND DOC = '52' AND strftime('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT CAST(SUM(IIF(T1.DOC = 54, 1, 0)) AS REAL) / SUM(IIF(T1.DOC = 52, 1, 0)) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Orange'\t----- bird -----\tcalifornia_schools",
    "459": "SELECT T1.Street FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath IS NOT NULL ORDER BY T2.AvgScrMath DESC LIMIT 6,1\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'LOS ANGELES' AND T2.Charter = 0 AND (T1.`Free Meal Count (K-12)` * 100 / T1.`Enrollment (K-12)`) < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Academic Year` = '2014-15' AND T2.School = 'State Special School' AND T2.City = 'FREMONT' AND T2.EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT T1.School, CAST(T2.`FRPM Count (Ages 5-17)` AS REAL) * 100 / T2.`Enrollment (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T2.`Low Grade` = 'KG' AND T2.`High Grade` = '09'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS amount FROM schools WHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara') GROUP BY County ORDER BY amount DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools WHERE Longitude = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(T1.City), T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`NSLP Provision Status` = 'Multiple Provision Types' AND T1.Magnet = 1 AND T2.`Low Grade` = 'K' AND T2.`High Grade` = '8' GROUP BY T1.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT T1.`Free Meal Count (K-12)` * 100 / T1.`Enrollment (K-12)`, T2.District FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine' OR T2.AdmFName2 = 'Alusine' OR T2.AdmFName3 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT DISTINCT T1.AdmEmail1, T1.AdmEmail2, T1.AdmEmail3 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'San Bernardino' AND T1.City = 'San Bernardino City Unified' AND T1.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND ((T1.SOC = '62' AND T1.SOCType = 'Intermediate/Middle Schools') OR (T1.DOC = '54' AND T1.DOCType = 'Unified')) AND T1.SchoolType = 'Public'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T3.type = 'POPLATEK PO OBRATU' AND T2.A3 = 'East Bohemia'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(T1.district_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND T1.A11 BETWEEN 6000 AND 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT T1.account_id, (SELECT MAX(T3.A11) FROM client AS T3 WHERE T3.gender = 'F') - (SELECT MIN(T3.A11) FROM client AS T3 WHERE T3.gender = 'F') AS gap FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F' AND T4.A11 = (SELECT MIN(T4.A11) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id WHERE T1.gender = 'F') ORDER BY T1.birth_date LIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.birth_date = (SELECT MAX(T.birth_date) FROM client AS T INNER JOIN account AS T4 ON T.district_id = T4.district_id INNER JOIN district AS T5 ON T.district_id = T5.district_id) AND T3.A11 = (SELECT MAX(T6.A11) FROM client AS T7 INNER JOIN account AS T8 ON T7.district_id = T8.district_id INNER JOIN district AS T6 ON T7.district_id = T6.district_id)\t----- bird -----\tfinancial",
    "473": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.status = 'POPLATEK TYDNE' AND T2.date LIKE '1997%' AND T2.amount = ( SELECT MIN(amount) FROM loan WHERE date LIKE '1997%' )\t----- bird -----\tfinancial",
    "474": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND T2.date LIKE '1993%' ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN account AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT T2.A2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT CAST(SUM(IIF(T2.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T2.gender) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'South Bohemia' AND T1.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'South Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT (T2.balance - T1.balance) * 100 / T1.balance FROM (SELECT account_id, MIN(balance) AS balance FROM trans WHERE date = '1993-03-22' GROUP BY account_id) AS T1 JOIN (SELECT account_id, MAX(balance) AS balance FROM trans WHERE date = '1998-12-27' GROUP BY account_id) AS T2 ON T1.account_id = T2.account_id JOIN (SELECT account_id, MIN(date) AS date FROM loan WHERE status = 'approved' AND date = '1993-07-05' GROUP BY account_id) AS T3 ON T1.account_id = T3.account_id\t----- bird -----\tfinancial",
    "479": "SELECT CAST(SUM(IIF(status = 'A', amount, 0)) AS REAL) * 100 / SUM(amount) FROM loan\t----- bird -----\tfinancial",
    "480": "SELECT CAST(SUM(IIF(T2.status = 'C', 1, 0)) AS REAL) * 100 / COUNT(T2.loan_id) FROM loan AS T2 INNER JOIN account AS T1 ON T1.account_id = T2.account_id WHERE T2.amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT T2.A12, ((T2.A13 - T2.A12) / T2.A12) * 100 FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT T2.A2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN account AS T3 ON T1.client_id = T3.account_id WHERE T1.gender = 'F' GROUP BY T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) FROM account WHERE district_id = 1 AND frequency IN ('C', 'D')\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 = (SELECT MAX(T1.A15) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 < (SELECT MAX(A15) FROM district) AND T2.gender = 'M') AND T2.gender = 'M'\t----- bird -----\tfinancial",
    "486": "SELECT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) FROM account WHERE district_id = 1 AND frequency IN ('C', 'D')\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 = (SELECT MAX(T1.A15) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 < (SELECT MAX(A15) FROM district) AND T2.gender = 'M') AND T2.gender = 'M'\t----- bird -----\tfinancial",
    "489": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'VYBER KARTOU' AND T2.amount < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU') AND strftime('%Y', T2.date) = '1998'\t----- bird -----\tfinancial",
    "490": "SELECT T1.type FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A11 > 8000 AND T3.A11 <= 9000 AND T1.type!= 'OWNER' GROUP BY T1.type\t----- bird -----\tfinancial",
    "491": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND strftime('%Y', T2.date) >= '1997'\t----- bird -----\tfinancial",
    "492": "SELECT T1.trans_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T3.client_id = T2.client_id WHERE T3.client_id = 3356 AND T1.type = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT CAST(SUM(IIF(T2.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(T2.gender) FROM account AS T1 INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T2 ON T3.client_id = T2.client_id INNER JOIN district AS T4 ON T2.district_id = T4.district_id WHERE T4.A11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT (SUM(IIF(T2.date LIKE '1997%', T2.amount, 0)) - SUM(IIF(T2.date LIKE '1996%', T2.amount, 0))) * 100 / SUM(IIF(T2.date LIKE '1996%', T2.amount, 0)) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT CAST(SUM(IIF(T1.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT T2.account_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' AND T1.district_id IN (SELECT district_id FROM district ORDER BY A11 ASC LIMIT 1) ORDER BY T1.birth_date ASC LIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(T2.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN('C', 'D') AND T2.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT T1.client_id, (strftime('%Y', 'now') - strftime('%Y', T1.birth_date)) AS age FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T2.type = 'OWNER' AND T3.type = 'gold'\t----- bird -----\tfinancial"
}
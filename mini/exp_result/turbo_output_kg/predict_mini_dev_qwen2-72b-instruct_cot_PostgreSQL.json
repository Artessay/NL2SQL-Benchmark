{
    "0": "SELECT CAST(SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT customerid FROM yearmonth WHERE date BETWEEN '201201' AND '201212' AND consumption = (SELECT MIN(consumption) FROM yearmonth WHERE date BETWEEN '201201' AND '201212')\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(t1.consumption) / 12 FROM (SELECT SUM(t2.consumption) AS consumption FROM yearmonth AS t2 WHERE SUBSTRING(t2.date, 1, 4) = '2013' GROUP BY t2.customerid) AS t1 INNER JOIN customers AS t3 ON t1.customerid = t3.customerid WHERE t3.segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT (SELECT SUM(consumption) FROM yearmonth WHERE SUBSTRING(date, 1, 4) = '2012' AND customerid IN (SELECT customerid FROM customers WHERE currency = 'CZK')) - (SELECT SUM(consumption) FROM yearmonth WHERE SUBSTRING(date, 1, 4) = '2012' AND customerid IN (SELECT customerid FROM customers WHERE currency = 'EUR')) AS difference_in_consumption\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTRING(T1.date,1,4) AS year, SUM(T1.consumption) AS total_consumption FROM yearmonth AS T1 WHERE T1.customerid IN (SELECT T2.customerid FROM customers AS T2 WHERE T2.currency = 'CZK') GROUP BY SUBSTRING(T1.date,1,4) ORDER BY total_consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT date FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND date BETWEEN '201301' AND '201312' ORDER BY consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT SUM(t1.consumption) / COUNT(DISTINCT t1.customerid) FROM (SELECT t2.customerid, SUM(t2.consumption) AS consumption FROM (SELECT t3.customerid, SUM(t3.consumption) AS consumption FROM (SELECT t4.customerid, SUM(t4.consumption) AS consumption FROM (SELECT t5.customerid, SUM(t5.consumption) AS consumption FROM (SELECT t6.customerid, SUM(t6.consumption) AS consumption FROM (SELECT t7.customerid, SUM(t7.consumption) AS consumption FROM (SELECT t8.customerid, SUM(t8.consumption) AS consumption FROM (SELECT t9.customerid, SUM(t9.consumption) AS consumption FROM (SELECT t10.customerid, SUM(t10.consumption) AS consumption FROM (SELECT t11.customerid, SUM(t11.consumption) AS consumption FROM (SELECT t12.customerid, SUM(t12.consumption) AS consumption FROM (SELECT t13.customerid, SUM(t13.consumption) AS consumption FROM (SELECT t14.customerid, SUM(t14.consumption) AS consumption FROM (SELECT t15.customerid, SUM(t15.consumption) AS consumption FROM (SELECT t16.customerid, SUM(t16.consumption) AS consumption FROM (SELECT t17.customerid, SUM(t17.consumption) AS consumption FROM (SELECT t18.customerid, SUM(t18.consumption) AS consumption FROM (SELECT t19.customerid, SUM(t19.consumption) AS consumption FROM (SELECT t20.customerid, SUM(t20.consumption) AS consumption FROM (SELECT t21.customerid, SUM(t21.consumption) AS consumption FROM (SELECT t22.customerid, SUM(t22.consumption) AS consumption FROM (SELECT t23.customerid, SUM(t23.consumption) AS consumption FROM (SELECT t24.customerid, SUM(t24.consumption) AS consumption FROM (SELECT t25.customerid, SUM(t25.consumption) AS consumption FROM (SELECT t26.customerid, SUM(t26.consumption) AS consumption FROM (SELECT t27.customerid, SUM(t27.consumption) AS consumption FROM (SELECT t28.customerid, SUM(t2\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT T1.segment,  CASE WHEN T2.consumption_2013 - T2.consumption_2012 > 0 THEN ((T2.consumption_2013 - T2.consumption_2012) / T2.consumption_2013) * 100 ELSE 0 END AS percentage_increase FROM (SELECT DISTINCT segment FROM customers) AS T1 LEFT JOIN (SELECT customerid,  SUM(CASE WHEN SUBSTRING(date FROM 1 FOR 4) = '2012' THEN consumption ELSE 0 END) AS consumption_2012,  SUM(CASE WHEN SUBSTRING(date FROM 1 FOR 4) = '2013' THEN consumption ELSE 0 END) AS consumption_2013 FROM yearmonth GROUP BY customerid) AS T2 ON T1.customerid = T2.customerid GROUP BY T1.segment,  T2.consumption_2013,  T2.consumption_2012 ORDER BY percentage_increase DESC LIMIT 1 UNION SELECT T1.segment,  CASE WHEN T2.consumption_2013 - T2.consumption_2012 > 0 THEN ((T2.consumption_2013 - T2.consumption_2012) / T2.consumption_2013) * 100 ELSE 0 END AS percentage_increase FROM (SELECT DISTINCT segment FROM customers) AS T1 LEFT JOIN (SELECT customerid,  SUM(CASE WHEN SUBSTRING(date FROM 1 FOR 4) = '2012' THEN consumption ELSE 0 END) AS consumption_2012,  SUM(CASE WHEN SUBSTRING(date FROM 1 FOR 4) = '2013' THEN consumption ELSE 0 END) AS consumption_2013 FROM yearmonth GROUP BY customerid) AS T2 ON T1.customerid = T2.customerid GROUP BY T1.segment,  T2.consumption_2013,  T2.consumption_2012 ORDER BY percentage_increase ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(consumption) FROM yearmonth WHERE customerid = 6 AND date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE country = 'CZE' AND segment = 'discount') - (SELECT COUNT(*) FROM gasstations WHERE country = 'SVK' AND segment = 'discount') AS difference\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT (SELECT COUNT(*) FROM customers WHERE segment = 'SME' AND currency = 'CZK') - (SELECT COUNT(*) FROM customers WHERE segment = 'SME' AND currency = 'EUR') AS difference\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (SELECT COUNT(*) FROM (SELECT customerid FROM yearmonth WHERE consumption > 46.73 AND customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') GROUP BY customerid) AS lam_customers_more_than_46_73) * 100.0 / (SELECT COUNT(*) FROM (SELECT customerid FROM customers WHERE segment = 'LAM') AS total_lam_customers) AS percentage\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT 100 * COUNT(CASE WHEN consumption > 528.3 THEN customerid END) / COUNT(customerid) FROM yearmonth WHERE date = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(CAST(substring(date, 1, 4) || substring(date, 6, 2) AS FLOAT) * consumption) FROM yearmonth WHERE substring(date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT T2.description FROM yearmonth AS T1 INNER JOIN products AS T2 ON T1.productid = T2.productid WHERE T1.date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT T2.country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.gasstationid = T2.gasstationid INNER JOIN yearmonth AS T3 ON T1.customerid = T3.customerid WHERE SUBSTRING(T3.date, 1, 6) = '201306'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT T1.customerid) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE T1.currency = 'EUR' AND T2.consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT T3.description FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.gasstationid = T2.gasstationid INNER JOIN products AS T3 ON T2.productid = T3.productid WHERE T1.country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT T1.time FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.gasstationid = T2.gasstationid WHERE T2.chainid = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.country = 'CZE' AND transactions_1k.date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT T1.currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid WHERE T2.date = '2012-08-24' AND T2.time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT T1.segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid WHERE T2.date = '2012-08-23' AND T2.time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.country = 'CZE' AND transactions_1k.date = '2012-08-26' AND transactions_1k.time BETWEEN '08:00:00' AND '09:00:00'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT T2.country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.gasstationid = T2.gasstationid WHERE T1.price = 548.4 AND T1.date = '2012-08-24'\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(COUNT(CASE WHEN T1.currency = 'EUR' THEN T1.customerid END) AS REAL) * 100 / COUNT(T1.customerid) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid WHERE T2.date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SELECT y1.consumption FROM (SELECT customerid, SUM(consumption) AS consumption FROM yearmonth WHERE date LIKE '2012%' GROUP BY customerid) y1 WHERE y1.customerid = (SELECT t1.customerid FROM (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25') t1)) - (SELECT y2.consumption FROM (SELECT customerid, SUM(consumption) AS consumption FROM yearmonth WHERE date LIKE '2013%' GROUP BY customerid) y2 WHERE y2.customerid = (SELECT t1.customerid FROM (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25') t1)) AS numerator, (SELECT y1.consumption FROM (SELECT customerid, SUM(consumption) AS consumption FROM yearmonth WHERE date LIKE '2012%' GROUP BY customerid) y1 WHERE y1.customerid = (SELECT t1.customerid FROM (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25') t1)) AS denominator, (SELECT (SELECT y1.consumption FROM (SELECT customerid, SUM(consumption) AS consumption FROM yearmonth WHERE date LIKE '2012%' GROUP BY customerid) y1 WHERE y1.customerid = (SELECT t1.customerid FROM (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25') t1)) - (SELECT y2.consumption FROM (SELECT customerid, SUM(consumption) AS consumption FROM yearmonth WHERE date LIKE '2013%' GROUP BY customerid) y2 WHERE y2.customerid = (SELECT t1.customerid FROM (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25') t1)) AS numerator, (SELECT y1.consumption FROM (SELECT customerid, SUM(consumption) AS consumption FROM yearmonth WHERE date LIKE '2012%' GROUP BY customerid) y1 WHERE y1.customerid = (SELECT t1.customerid FROM (SELECT customerid FROM transactions\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT (COUNT(CASE WHEN segment = 'premium' THEN 1 END) * 100.0 / COUNT(*)) FROM gasstations WHERE country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(t1.price * t1.amount) AS total_spent FROM transactions_1k AS t1 WHERE t1.customerid = 38508 AND t1.date = '2012-01-01' UNION SELECT SUM(t2.price * t2.amount) AS total_spent_in_jan_2012 FROM transactions_1k AS t2 WHERE t2.customerid = 38508 AND t2.date = '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT T1.customerid, SUM(T1.price) / SUM(T1.amount) AS average_price_per_item, T2.currency FROM transactions_1k AS T1 JOIN customers AS T2 ON T1.customerid = T2.customerid GROUP BY T1.customerid, T2.currency ORDER BY SUM(T1.price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT T2.consumption FROM (SELECT T1.customerid FROM (SELECT customerid FROM transactions_1k WHERE productid = 5 AND price / amount > 29.00) AS T1 JOIN (SELECT customerid FROM yearmonth WHERE date = '201208') AS T2 ON T1.customerid = T2.customerid) AS T3 JOIN (SELECT customerid, consumption FROM yearmonth WHERE date = '201208') AS T4 ON T3.customerid = T4.customerid\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) FROM (SELECT e.event_id FROM event e JOIN attendance a ON e.event_id = a.link_to_event GROUP BY e.event_id HAVING COUNT(a.link_to_member) > 10 AND e.type = 'Meeting') AS subquery\t----- bird -----\tstudent_club",
    "33": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 AND T1.type!= 'fundraiser'\t----- bird -----\tstudent_club",
    "34": "SELECT T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT T2.approved FROM event AS T1 INNER JOIN budget AS T3 ON T1.event_id = T3.link_to_event INNER JOIN expense AS T2 ON T2.link_to_budget = T3.budget_id WHERE T1.event_name = 'October Meeting' AND T1.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND (SUBSTRING(T2.expense_date, 6, 2) = '09' OR SUBSTRING(T2.expense_date, 6, 2) = '10')\t----- bird -----\tstudent_club",
    "38": "SELECT (SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE SUBSTRING(T2.event_date,1,4) = '2019') - (SELECT SUM(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE SUBSTRING(T2.event_date,1,4) = '2020')\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT T1.event_status FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Post Cards, Posters' AND T3.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'Medium' AND link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business')\t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT CASE WHEN SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.amount ELSE 0 END) / SUM(CASE WHEN T1.event_name = 'October Meeting' THEN T2.amount ELSE 0 END) > 1 THEN 1 ELSE 0 END FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(*) FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer')\t----- bird -----\tstudent_club",
    "51": "SELECT T2.first_name, T2.last_name FROM major AS T1 INNER JOIN member AS T2 ON T2.link_to_major = T1.major_id WHERE T1.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY T2.spent / T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget WHERE spent IS NOT NULL\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT T2.first_name, T2.last_name FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id GROUP BY T1.link_to_member HAVING COUNT(T1.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT T3.first_name, T3.last_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event JOIN member AS T3 ON T3.member_id = T2.link_to_member WHERE T1.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent IS NOT NULL ORDER BY T2.spent LIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) * 100.0 / SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event\t----- bird -----\tstudent_club",
    "59": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "61": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer')) = (SELECT member_id FROM member WHERE first_name = 'Maya' AND last_name = 'Mclean') AS attended\t----- bird -----\tstudent_club",
    "63": "SELECT T2.cost FROM event AS T1 JOIN expense AS T2 ON T1.event_id = T2.link_to_budget WHERE T1.event_name = 'September Speaker' AND T2.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining LIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'October Meeting' AND T3.approved = 'Yes'\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(T2.amount), T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) AS total_cost FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id ='rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT T1.type FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT T2.last_name, T1.department, T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN T3.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member INNER JOIN income AS T3 ON T3.link_to_member = T1.member_id WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT T1.event_name FROM event AS T1 WHERE T1.event_date BETWEEN '2019-03-15' AND '2020-03-20' AND T1.type = 'Game' AND T1.status = 'Closed'\t----- bird -----\tstudent_club",
    "75": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT (COUNT(CASE WHEN T1.Admission = '+' THEN T1.ID END) - COUNT(CASE WHEN T1.Admission = '-' THEN T1.ID END)) / COUNT(CASE WHEN T1.SEX = 'M' THEN T1.ID END) * 100 AS deviation_percentage FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.Patient WHERE T1.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(COUNT(CASE WHEN EXTRACT(YEAR FROM Birthday) > 1930 THEN 1 END) AS FLOAT) / COUNT(*) * 100 FROM Patient WHERE Sex = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(COUNT(CASE WHEN T1.Admittance = '+' THEN T2.ID END) AS REAL) / COUNT(CASE WHEN T1.Admittance = '-' THEN T2.ID END) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.Patient = T2.ID WHERE T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT T2.Diagnosis, T1.Date FROM Laboratory AS T1 JOIN Examination AS T2 ON T1.PatientID = T2.PatientID WHERE T1.PatientID = '30609'\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT T1.patient_id, T1.sex, T1.birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT T1.PatientID, (EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM T1.Birthday)) AS Age FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT T1.patient_id, T1.sex, T2.diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.patient_id = T2.patient_id WHERE T2.thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) FROM Patient WHERE sex = 'F' AND Description LIKE '1997%' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) FROM Patient AS T1 JOIN Examination AS T2 ON T1.patient_id = T2.patient_id WHERE T2.Thrombosis = '1' AND T2.year = '1997' AND T1.sex = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT T2.symptoms, T2.diagnosis FROM (SELECT patient_id, MIN(birthday) AS youngest FROM Patient) AS T1 JOIN Examination AS T2 ON T1.patient_id = T2.patient_id WHERE T2.symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT T2.completed_date, EXTRACT(YEAR FROM T1.first_date) - EXTRACT(YEAR FROM T1.birthday) AS age\nFROM (\nSELECT MIN(birthday) AS birthday\nFROM Patient\nWHERE diagnosis = 'SJS'\n) AS T1,\n(\nSELECT completed_date\nFROM Laboratory\nWHERE lab_id IN (\nSELECT lab_id\nFROM Examination\nWHERE patient_id IN (\nSELECT patient_id\nFROM Patient\nWHERE diagnosis = 'SJS'\n)\n)\nORDER BY completed_date ASC\nLIMIT 1\n) AS T2\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= 6.5 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.PATIENT_ID = T2.PATIENT_ID WHERE T2.LAB_NAME = 'UA'\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT T1.PatientID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.PatientID = T2.PatientID WHERE EXTRACT(YEAR FROM T2.ExaminationDate) BETWEEN 1990 AND 1993 AND EXTRACT(YEAR FROM T1.Birthday) >= EXTRACT(YEAR FROM CURRENT_DATE) - 18\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT T2.Examination_Date - T1.Birthday AS Age,  T3.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.Patient_ID = T2.Patient_ID INNER JOIN Laboratory AS T3 ON T1.Patient_ID = T3.Patient_ID WHERE T3.HGB = ( SELECT MAX(HGB) FROM Laboratory ) AND T3.HGB IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT T2.Result FROM Patient AS T1 JOIN Examination AS T2 ON T1.Patient_ID = T2.Patient_ID WHERE T2.Examination_Date = '1993-11-12' AND T1.Diagnosis = 'SLE' AND T2.Description = 'aCL IgM' AND T1.Diagnosis_Date = '1994-02-19'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-11-%' THEN T2.\"T-CHO\" ELSE 0 END) - SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-12-%' THEN T2.\"T-CHO\" ELSE 0 END)) / SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-12-%' THEN T2.\"T-CHO\" ELSE 0 END) AS decrease_rate FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.Patient_ID = T2.Patient_ID\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT COUNT(DISTINCT T1.PatientID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.PatientID = T2.PatientID JOIN Laboratory AS T3 ON T1.PatientID = T3.PatientID WHERE T2.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T3.GPT > 30 AND T3.ALB < 4 GROUP BY T1.PatientID\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(T1.PatientID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T2.Thrombosis = 2 AND T2.ANA = 'S' AND T2.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT T1.PatientID FROM Patient AS T1 JOIN Examination AS T2 ON T1.PatientID = T2.PatientID JOIN Laboratory AS T3 ON T1.PatientID = T3.PatientID WHERE T2.Adm = '-' AND T3.Date LIKE '1991-10%' AND T3.T_BIL < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(T2.ALB) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.Patient_ID = T2.Patient_ID JOIN Examination AS T3 ON T1.Patient_ID = T3.Patient_ID WHERE T1.SEX = 'F' AND T2.PLT > 400 AND T3.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND EXISTS (SELECT * FROM Examination WHERE Patient.PID = Examination.PID AND Diagnosis = 'APS')\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SEX) FROM Patient AS T1 JOIN Examination AS T2 ON T1.PATIENT_ID = T2.PATIENT_ID WHERE EXTRACT(YEAR FROM T1.BIRTHDAY) = 1980 AND T2.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE WHEN (SELECT UA FROM Laboratory WHERE PatientID = 57266 AND SEX = 'M') > 8.0 OR (SELECT UA FROM Laboratory WHERE PatientID = 57266 AND SEX = 'F') > 6.5 THEN 'Yes' ELSE 'No' END AS Is_Uric_Acid_Normal\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT T1.patient_id FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT T1.diagnosis FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T2.GPT > 60 ORDER BY T1.date_of_birth ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT T1.id, T1.sex, T1.birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.id = T2.patient_id WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT GROUP_CONCAT(DISTINCT p.ID), l.sex FROM Patient p JOIN Examination e ON p.ID = e.patient_id JOIN Laboratory l ON e.lab_id = l.lab_id WHERE l.test_name = 'T-BIL' AND l.test_value >= 2.0 GROUP BY l.sex\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(EXTRACT(YEAR FROM AGE(NOW(), birthday))) AS average_age FROM Patient WHERE sex = 'M' AND id IN (SELECT patient_id FROM Laboratory WHERE test_name = 'T-CHO' AND test_result >= 250)\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT p.PatientID) FROM Patient p JOIN Laboratory l ON p.PatientID = l.PatientID WHERE l.Test = 'TG' AND l.Result > 200 AND EXTRACT(YEAR FROM AGE(CURRENT_DATE, p.Birthday)) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT T1.patient_id) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T1.sex = 'M' AND T1.year BETWEEN 1936 AND 1956 AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT T1.patient_id, T1.sex, EXTRACT(YEAR FROM AGE(T1.birthday)) AS age FROM patient AS T1 JOIN laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T2.GLU >= 180 AND T2.T_CHO < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT T1.PatientID, T1.Age FROM (SELECT PatientID, (EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM Birthday)) AS Age FROM Patient) AS T1 JOIN (SELECT PatientID, Diagnosis FROM Examination WHERE RBC < 3.5) AS T2 ON T1.PatientID = T2.PatientID\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT T1.Patient_ID,  T1.Sex FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.Patient_ID = T2.Patient_ID WHERE T2.Diagnosis = 'SLE' AND T2.HGB > 10 AND T2.HGB < 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT T1.ID, (EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.Patient_ID WHERE T2.HCT >= 52 GROUP BY T1.ID HAVING COUNT(T2.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) - (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS difference\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT T1.PatientID FROM Patient AS T1 JOIN Examination AS T2 ON T1.PatientID = T2.PatientID JOIN Laboratory AS T3 ON T2.ExaminationID = T3.ExaminationID WHERE EXTRACT(YEAR FROM T2.Date) = 1984 AND T3.PLT BETWEEN 100 AND 400 AND EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM T1.Birthday) < 50\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) * 100 / COUNT(T1.SEX)) AS percentage FROM (SELECT * FROM Patient WHERE EXTRACT(YEAR FROM AGE(CURRENT_DATE, Birthday)) > 55) AS T1 INNER JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T2.PT >= 14\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT T1.PatientID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T1.Sex = 'M' AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT T1.patient_id) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T2.IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT T1.PatientID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T2.IGG > 900 AND T2.IGG < 2000 AND T1.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT T1.patient_id) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T2.IGA > 80 AND T2.IGA < 500 AND EXTRACT(YEAR FROM T1.First_Date) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT T2.Diagnosis FROM (SELECT Diagnosis, COUNT(Diagnosis) AS cnt FROM (SELECT E.PatientID, L.IGM, E.Diagnosis FROM Examination AS E JOIN Laboratory AS L ON E.PatientID = L.PatientID WHERE (L.IGM <= 40 OR L.IGM >= 400)) AS T1 GROUP BY T1.Diagnosis) AS T2 WHERE T2.cnt = (SELECT MAX(T2.cnt) FROM (SELECT Diagnosis, COUNT(Diagnosis) AS cnt FROM (SELECT E.PatientID, L.IGM, E.Diagnosis FROM Examination AS E JOIN Laboratory AS L ON E.PatientID = L.PatientID WHERE (L.IGM <= 40 OR L.IGM >= 400)) AS T1 GROUP BY T1.Diagnosis) AS T2)\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(T1.PatientID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T2.CRP = '+' AND T2.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT T1.patient_id) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T2.CRE >= 1.5 AND EXTRACT(YEAR FROM AGE(CURRENT_DATE, T1.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT T1.PatientID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T2.RNP IN ('-', '0') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) FROM (SELECT Patient.PatientID FROM Patient JOIN Laboratory ON Patient.PatientID = Laboratory.PatientID WHERE Laboratory.SM IN ('-','0') AND Laboratory.Thrombosis = 0) AS SubQuery;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT T1.patient_id) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.patient_id = T2.patient_id WHERE T2.SC170 IN('negative', '0') AND T1.Sex = 'F' AND T1.symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT T1.PatientID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.PatientID = T2.PatientID WHERE T2.CENTROMEA IN('-', '+-') AND T2.SSB IN('-', '+-') AND T1.Sex = 'M'\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Patient.birthdate) FROM Patient JOIN Laboratory ON Patient.patient_id = Laboratory.patient_id WHERE Laboratory.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT p.patient_id) FROM (SELECT patient_id FROM examination WHERE cpk < 250) p JOIN (SELECT patient_id FROM laboratory WHERE kct = '+' OR rvvt = '+' OR lac = '+') l ON p.patient_id = l.patient_id\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT T2.team_long_name FROM Match AS T1 JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.season = '2009/2010' AND T1.league_id IN (SELECT league_id FROM League WHERE name = 'Scotland Premier League') AND T1.away_team_goal > T1.home_team_goal GROUP BY T1.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed FROM Team_Attributes WHERE teamID IN (SELECT teamID FROM Team_Attributes WHERE buildUpPlaySpeed IS NOT NULL ORDER BY buildUpPlaySpeed DESC LIMIT 4) ORDER BY buildUpPlaySpeed DESC\t----- bird -----\teuropean_football_2",
    "131": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' AND T2.home_team_goal = T2.away_team_goal GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT T1.player_api_id,  (date_part('year', AGE(T1.birthday,  CURRENT_DATE))) AS age FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND T2.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "133": "SELECT T1.name,  COUNT(T2.match_api_id) FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY COUNT(T2.match_api_id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012') AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_fifa_api_id) FROM Player_Attributes JOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id WHERE EXTRACT(YEAR FROM birth_date) BETWEEN 1987 AND 1992\t----- bird -----\teuropean_football_2",
    "137": "SELECT SUM(long_shots) / COUNT(player_fifa_api_id) FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag')\t----- bird -----\teuropean_football_2",
    "138": "SELECT T2.player_name, AVG(T1.heading_accuracy) as average_heading_accuracy\nFROM Player_Attributes AS T1\nJOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id\nWHERE T2.height > 180\nGROUP BY T2.player_name\nORDER BY average_heading_accuracy DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT T2.name FROM (SELECT T1.id AS id,  SUM(home_team_goal) / COUNT(DISTINCT T1.id) AS home_avg,  SUM(away_team_goal) / COUNT(DISTINCT T1.id) AS away_avg FROM Match AS T1 WHERE T1.season = '2009/2010' GROUP BY T1.league_id) AS T2 JOIN League AS T2 ON T2.id = T1.league_id WHERE T1.home_avg > T1.away_avg\t----- bird -----\teuropean_football_2",
    "140": "SELECT * FROM Player WHERE SUBSTRING(birthday, 1, 4) = '1970' AND SUBSTRING(birthday, 6, 2) = '10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) FROM Match WHERE season = '2010/2011' AND country = 'Poland'\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_api_id FROM Player_Attributes WHERE attribute = 'finishing' GROUP BY player_api_id HAVING AVG(value) IN (SELECT MAX(AVG(value)) FROM Player_Attributes WHERE attribute = 'finishing' GROUP BY player_api_id HAVING player_api_id IN (SELECT player_api_id FROM Player WHERE height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player)))\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(t2.overall_rating) FROM (SELECT * FROM Player WHERE height > 170) AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE strftime('%Y', t2.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T1.ball_control ELSE 0 END) / COUNT(CASE WHEN T2.player_name = 'Abdou Diallo' THEN T1.id ELSE NULL END)) - (SUM(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T1.ball_control ELSE 0 END) / COUNT(CASE WHEN T2.player_name = 'Aaron Appindangoye' THEN T1.id ELSE NULL END)) AS diff FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id\t----- bird -----\teuropean_football_2",
    "146": "SELECT name FROM Player WHERE name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT player_id) FROM Player_Attributes WHERE strftime('%Y', date) <= '1986' AND defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT T1.name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70 GROUP BY T1.name\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match WHERE SUBSTR(date, 1, 7) = '2009-04' AND league_id = (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\t----- bird -----\teuropean_football_2",
    "152": "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2008/2009' GROUP BY T1.name ORDER BY COUNT(T2.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT (100 * (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk' - SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel')) AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(T2.chanceCreationPassing) AS highest_chance_creation_passing, T2.chanceCreationPassingClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax' GROUP BY T2.chanceCreationPassingClass ORDER BY highest_chance_creation_passing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "156": "SELECT T1.name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date = '2016-06-23' ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.player_name = 'Francesco Migliore' AND pa.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT T2.date FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' AND T2.crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'))\t----- bird -----\teuropean_football_2",
    "160": "SELECT team_attributes.buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'FC Lorient') AND date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT team_attributes.defence_aggression FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'Hannover 96') AND date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND SUBSTRING(T2.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT (CAST((SUM(CASE WHEN player_name = 'Landon Donovan' THEN overall_rating ELSE 0 END) - SUM(CASE WHEN player_name = 'Jordan Bowery' THEN overall_rating ELSE 0 END)) AS REAL) / SUM(CASE WHEN player_name = 'Landon Donovan' THEN overall_rating ELSE 0 END)) * 100 FROM Player_Attributes WHERE date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "165": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high' GROUP BY T1.player_name\t----- bird -----\teuropean_football_2",
    "167": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_fifa_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND date_of_birth > '1990-01-01'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_fifa_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_fifa_api_id = 23) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "172": "SELECT T1.home_team_goal, T1.away_team_goal FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.league_id WHERE T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge')\t----- bird -----\teuropean_football_2",
    "174": "SELECT MAX(T2.finishing),  MAX(T2.curve) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T2.league_id = T1.id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY COUNT(T2.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT T2.team_long_name FROM Match AS T1 JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "178": "SELECT CAST(SUM(CASE WHEN T2.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id\t----- bird -----\teuropean_football_2",
    "179": "SELECT T1.driverref FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 20 ORDER BY T2.q1 DESC LIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT T1.surname FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 19 AND T2.q2 IS NOT NULL ORDER BY T2.q2 ASC LIMIT 1\t----- bird -----\tformula_1",
    "181": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T1.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT T2.q1 FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverid = T2.driverid WHERE T1.forename = 'Bruno' AND T1.surname = 'Senna' AND T2.raceid = 354\t----- bird -----\tformula_1",
    "185": "SELECT T2.number FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T1.raceid = 903 AND T1.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 592 AND T2.time IS NOT NULL ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT T3.url FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T2.raceid = 161 AND T1.time LIKE '01:27%'\t----- bird -----\tformula_1",
    "189": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT T3.url FROM results AS T1 JOIN constructorResults AS T2 ON T1.constructorid = T2.constructorid JOIN constructors AS T3 ON T2.constructorid = T3.constructorid WHERE T1.raceid = 9 ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT T3.code FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.raceid = 45 AND T2.q3 LIKE '01:33%'\t----- bird -----\tformula_1",
    "192": "SELECT T2.url FROM races AS T1 JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.raceid = 901\t----- bird -----\tformula_1",
    "193": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.raceid = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT T1.nationality FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T2.fastestlapspeed = (SELECT MAX(fastestlapspeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT (100 * (SELECT results.fastestlapspeed FROM results INNER JOIN races ON results.raceid = races.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.raceid = 853 AND drivers.forename = 'Paul' AND drivers.surname = 'di Resta') - (SELECT results.fastestlapspeed FROM results INNER JOIN races ON results.raceid = races.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.raceid = 854 AND drivers.forename = 'Paul' AND drivers.surname = 'di Resta')) / (SELECT results.fastestlapspeed FROM results INNER JOIN races ON results.raceid = races.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.raceid = 853 AND drivers.forename = 'Paul' AND drivers.surname = 'di Resta')\t----- bird -----\tformula_1",
    "196": "SELECT CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN T1.driverid END) AS REAL) * 100 / COUNT(T1.driverid) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE EXTRACT(MONTH FROM T1.date) = EXTRACT(MONTH FROM (SELECT MIN(date) FROM races)) AND EXTRACT(YEAR FROM T1.date) = EXTRACT(YEAR FROM (SELECT MIN(date) FROM races))\t----- bird -----\tformula_1",
    "198": "SELECT T1.forename, T1.surname, MAX(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.forename, T1.surname ORDER BY MAX(T2.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT T3.forename, T3.surname, T2.name FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T1.milliseconds = (SELECT MIN(milliseconds) FROM results)\t----- bird -----\tformula_1",
    "200": "SELECT AVG(T3.milliseconds) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN lapTimes AS T3 ON T2.resultid = T3.resultid INNER JOIN drivers AS T4 ON T2.driverid = T4.driverid WHERE T1.name = 'Malaysian Grand Prix' AND T1.year = 2009 AND T4.forename = 'Lewis' AND T4.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "201": "SELECT (COUNT(CASE WHEN T2.surname = 'Hamilton' AND T1.position > 1 THEN 1 END) * 100.0 / COUNT(CASE WHEN T2.surname = 'Hamilton' THEN 1 END)) FROM results AS T1 JOIN drivers AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT drivers.forename, drivers.surname, drivers.nationality, MAX(results.points) FROM results JOIN drivers ON results.driverid = drivers.driverid WHERE results.position = 1 GROUP BY drivers.driverid, drivers.forename, drivers.surname, drivers.nationality ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT T2.name, T1.name, T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE MONTH(T2.date) = 9 AND YEAR(T2.date) = 2005\t----- bird -----\tformula_1",
    "205": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT T3.name, T3.year FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' ORDER BY T2.milliseconds LIMIT 1\t----- bird -----\tformula_1",
    "207": "SELECT T1.year, T3.points FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year JOIN results AS T3 ON T2.raceid = T3.raceid JOIN drivers AS T4 ON T3.driverid = T4.driverid WHERE T4.forename = 'Lewis' AND T4.surname = 'Hamilton' ORDER BY T1.year LIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT CAST(SUM(CASE WHEN T1.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.country) FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitref FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers)\t----- bird -----\tformula_1",
    "212": "SELECT T3.driverref FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2007 AND T2.position = 1\t----- bird -----\tformula_1",
    "213": "SELECT r.name FROM races r JOIN results rs ON r.raceid = rs.raceid JOIN drivers d ON rs.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' ORDER BY rs.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(T2.fastestlapspeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT T3.positionorder FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.year = 2008 AND T1.name = 'Chinese Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "216": "SELECT T2.time FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.name = 'Chinese Grand Prix' AND T1.year = 2008 AND T2.position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT T1.driverid) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = 'Chinese Grand Prix' AND T2.year = 2008 AND T1.time IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT (1 - (MIN(T1.milliseconds) / MAX(T1.milliseconds))) * 100 AS percentage_faster FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.position IS NOT NULL AND T1.milliseconds IS NOT NULL GROUP BY T2.raceid HAVING T1.position = 1 OR T1.position = (SELECT COUNT(*) FROM results AS T3 WHERE T3.raceid = T2.raceid AND T3.position IS NOT NULL AND T3.milliseconds IS NOT NULL) ORDER BY T1.position ASC LIMIT 2;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(T3.points) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorid = T2.constructorid INNER JOIN results AS T3 ON T2.raceid = T3.raceid WHERE T1.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT T1.name FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorid = T2.constructorid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.raceid = 291 AND T2.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) FROM (SELECT constructorid FROM results GROUP BY constructorid HAVING COUNT(raceid) = 2 AND SUM(points) = 0) AS t1 JOIN constructors ON t1.constructorid = constructors.constructorid WHERE constructors.nationality = 'Japanese'\t----- bird -----\tformula_1",
    "223": "SELECT (CAST(COUNT(CASE WHEN T2.time IS NOT NULL THEN T1.driverid END) AS REAL) / COUNT(T1.driverid)) * 100 FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT AVG(EXTRACT(EPOCH FROM TIME)) AS average_time_in_seconds FROM(SELECT EXTRACT(EPOCH FROM T2.time) FROM seasons AS T1 INNER JOIN results AS T2 ON T1.year = T2.year WHERE T2.time IS NOT NULL AND T1.year < 1975) AS subquery\t----- bird -----\tformula_1",
    "225": "SELECT T2.fastestlap FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2009 AND T2.position = 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(T2.fastestlapspeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT (CAST(COUNT(CASE WHEN T1.dob < '1985-01-01' AND T2.laps > 50 THEN T1.driverid END) AS REAL) / COUNT(T1.driverid)) * 100 FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverid = T2.driverid WHERE T1.nationality = 'French' AND T2.time < '02:00.00'\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT COUNT(*) FROM (SELECT T1.driverid, T1.forename, T1.surname, T1.dob, T1.nationality FROM drivers AS T1 WHERE T1.nationality = 'Dutch' AND T1.driverid IN (SELECT driverid FROM drivers ORDER BY dob DESC LIMIT 3)) AS T2\t----- bird -----\tformula_1",
    "231": "SELECT driverref FROM drivers WHERE nationality = 'German' ORDER BY dob LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT T1.driverid, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid WHERE T1.dob LIKE '1971%' AND T2.fastestlaptime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE statusid = 2 AND raceid BETWEEN 50 AND 100 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT T3.year, T3.name, T3.date, T3.time FROM (SELECT T1.driverid, MIN(T2.raceid) AS raceid FROM qualifying AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid GROUP BY T1.driverid) AS T4 JOIN drivers AS T1 ON T4.driverid = T1.driverid JOIN races AS T3 ON T4.raceid = T3.raceid WHERE T1.dob = (SELECT driverid FROM (SELECT driverid, dob FROM drivers) AS T5 WHERE T5.driverid IN (SELECT driverid FROM (SELECT T1.driverid, MIN(T2.raceid) AS raceid FROM qualifying AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid GROUP BY T1.driverid) AS T6) ORDER BY dob DESC LIMIT 1)\t----- bird -----\tformula_1",
    "236": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverid = T2.driverid WHERE T1.nationality = 'German' AND EXTRACT(YEAR FROM T1.dob) BETWEEN 1980 AND 1985 GROUP BY T1.driverid, T1.forename, T1.surname ORDER BY AVG(T2.duration) LIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT T4.constructorref, T4.url FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN constructors AS T3 ON T2.constructorid = T3.constructorid JOIN constructorStandings AS T4 ON T3.constructorid = T4.constructorid WHERE T1.name = 'Singapore Grand Prix' AND T1.year = 2009 ORDER BY T2.time LIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT T3.name, T3.nationality, SUM(T2.points) AS total_points FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN constructors AS T3 ON T2.constructorid = T3.constructorid WHERE T1.name = 'Monaco Grand Prix' AND T1.year BETWEEN 1980 AND 2010 GROUP BY T3.name, T3.nationality ORDER BY total_points DESC LIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT T3.forename, T3.surname FROM (SELECT T1.driverid, T1.q3 FROM (SELECT driverid, q3, RANK () OVER (ORDER BY q3) rank FROM qualifying WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit'))) T1 WHERE T1.rank = 1) T2 JOIN drivers T3 ON T2.driverid = T3.driverid\t----- bird -----\tformula_1",
    "242": "SELECT T1.forename, T1.surname, T1.nationality, T2.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T1.dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) FROM results WHERE statusid = 3 AND raceid = (SELECT raceid FROM races WHERE name = 'Canadian Grand Prix') GROUP BY driverid ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T3.raceid = T2.raceid WHERE T2.position = 1 AND T2.fastestlaptime IS NOT NULL ORDER BY T2.fastestlaptime LIMIT 1\t----- bird -----\tformula_1",
    "245": "SELECT T1.fastestlaptime FROM results AS T1 INNER JOIN circuits AS T2 ON T1.raceid = T2.circuitid WHERE T2.country = 'Italy' AND T1.position = 1\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) FROM hero_power AS T1 JOIN superhero AS T2 ON T1.hero_id = T2.id JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T2.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE superpower.power_name = 'Agility' AND colour.colour = 'Blue'\t----- bird -----\tsuperhero",
    "248": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT T1.superhero_name, T1.height_cm FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT T3.colour FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN colour AS T3 ON T2.eye_colour_id = T3.id WHERE T1.publisher_name = 'Marvel Comics' GROUP BY T3.colour ORDER BY COUNT(T2.id) DESC\t----- bird -----\tsuperhero",
    "251": "SELECT T3.superhero_name FROM publisher AS T1 INNER JOIN superhero AS T3 ON T1.id = T3.publisher_id INNER JOIN hero_power AS T4 ON T3.id = T4.hero_id INNER JOIN superpower AS T5 ON T4.power_id = T5.id WHERE T1.publisher_name = 'Marvel Comics' AND T5.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT T5.publisher_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "254": "SELECT T3.superhero_name FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T1.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT T2.superhero_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "259": "SELECT CAST(COUNT(CASE WHEN T1.alignment = 'Bad' THEN T2.id ELSE NULL END) AS REAL) * 100 / COUNT(T2.id), COUNT(CASE WHEN T1.alignment = 'Bad' AND T2.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN T2.id ELSE NULL END) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id\t----- bird -----\tsuperhero",
    "260": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T4.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT T3.colour FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T1.height_cm = 185 AND T2.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(COUNT(CASE WHEN T2.publisher_id = 13 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) FROM hero_power hp JOIN superpower sp ON hp.power_id = sp.id WHERE sp.power_name ='stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT T3.full_name FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T1.attribute_name ='strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT T4.superhero_name FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id INNER JOIN publisher AS T5 ON T3.publisher_id = T5.id WHERE T1.attribute_name = 'durability' AND T5.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id OR T1.hair_colour_id = T2.id OR T1.skin_colour_id = T2.id JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT T2.superhero_name FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id WHERE T1.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') AND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'))\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T3.publisher_name = 'Marvel Comics' THEN T1.id ELSE NULL END) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS weight_difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT T3.superhero_name FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T1.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T3.id = T2.attribute_id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy') GROUP BY T2.publisher_name\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.id = 7;\t----- bird -----\tsuperhero",
    "290": "SELECT CAST(SUM(CASE WHEN T2.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id\t----- bird -----\tsuperhero",
    "291": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7 AND (weight_kg = 0 OR weight_kg IS NULL)) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1 AND (weight_kg = 0 OR weight_kg IS NULL)) AS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') AND skin_colour_id IN (SELECT id FROM colour WHERE colour = 'Green')\t----- bird -----\tsuperhero",
    "294": "SELECT T2.superhero_name FROM superpower AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.power_id INNER JOIN superhero AS T2 ON T3.hero_id = T2.id WHERE T1.power_name = 'Wind Control' ORDER BY T2.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT T3.gender FROM superpower AS T1 JOIN hero_power AS T2 ON T1.id = T2.power_id JOIN gender AS T3 ON T2.hero_id = T4.id JOIN superhero AS T4 ON T3.id = T4.gender_id WHERE T1.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference\t----- bird -----\tsuperhero",
    "297": "SELECT displayname FROM users WHERE displayname IN ('Harlan', 'Jarrod Dixon') ORDER BY reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT displayname FROM users WHERE EXTRACT(YEAR FROM creationdate) = 2011\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE lastaccessdate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT ownerdisplayname FROM posts WHERE title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE ownerdisplayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT lasteditordisplayname FROM posts WHERE title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) FROM posts WHERE score >= 20 AND owneruserid IN (SELECT id FROM users WHERE age > 65)\t----- bird -----\tcodebase_community",
    "304": "SELECT T1.body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.id = T2.excerptpostid WHERE T2.tagname = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(T1.score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.owneruserid = T2.id WHERE T2.displayname = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT (COUNT(CASE WHEN u.age > 65 THEN p.id END) * 100.0 / COUNT(p.id)) AS percentage FROM posts p JOIN users u ON p.owneruserid = u.id WHERE p.score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT p.favoritecount FROM posts p WHERE p.id = (SELECT c.postid FROM comments c WHERE c.userid = 3025 AND c.creationdate = '2014-04-23 20:29:39')\t----- bird -----\tcodebase_community",
    "308": "SELECT (CASE WHEN c.postid IN (SELECT p.id FROM posts AS p WHERE p.closeddate IS NULL) THEN 'Well-finished' ELSE 'Not well-finished' END) AS post_status FROM comments AS c WHERE c.userid = 23853 AND c.creationdate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE ownerdisplayname = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT u.displayname FROM users u JOIN votes v ON u.id = v.userid WHERE v.id = '6347'\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(T1.id) AS REAL) / COUNT(T2.id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.owneruserid = '24' AND T2.userid = '24' WHERE T1.owneruserid = '24' AND T2.userid = '24'\t----- bird -----\tcodebase_community",
    "312": "SELECT viewcount FROM posts WHERE title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT text FROM comments WHERE score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT userdisplayname FROM comments WHERE text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT u.displayname, u.reputation FROM users u JOIN posts p ON u.id = p.owneruserid WHERE p.title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT ownerdisplayname FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.text FROM comments c JOIN posts p ON c.postid = p.id WHERE p.title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND c.userid IN (SELECT lasteditoruserid FROM posts WHERE title = 'Why square the difference instead of taking the absolute value in standard deviation?')\t----- bird -----\tcodebase_community",
    "318": "SELECT u.displayname FROM users u JOIN votes v ON u.id = v.userid JOIN posts p ON v.postid = p.id WHERE v.bountyamount = 50 AND p.title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(T1.viewcount) AS average_view_count, T1.title, T4.text FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.id = T2.postid INNER JOIN tags AS T3 ON T3.id = T2.relatedpostid INNER JOIN comments AS T4 ON T4.postid = T1.id WHERE T3.tagname = 'humor' GROUP BY T1.title, T4.text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) FROM (SELECT UserId, COUNT(*) AS badge_count FROM badges GROUP BY UserId HAVING COUNT(*) > 5) AS users_with_badges\t----- bird -----\tcodebase_community",
    "321": "SELECT u.id, u.displayname FROM users u WHERE u.id IN (SELECT p.owneruserid FROM posts p WHERE p.viewcount >= 1000 GROUP BY p.owneruserid HAVING COUNT(p.id) = 1)\t----- bird -----\tcodebase_community",
    "322": "SELECT (COUNT(CASE WHEN EXTRACT(YEAR FROM \"date\") = 2010 THEN 1 END) * 100.0 / COUNT(*) - COUNT(CASE WHEN EXTRACT(YEAR FROM \"date\") = 2011 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_difference FROM badges WHERE \"name\" = 'Student' GROUP BY \"name\"\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(T1.upvotes), AVG(T1.age) FROM users AS T1 INNER JOIN posts AS T2 ON T1.id = T2.owneruserid WHERE T2.id IN (SELECT postid FROM (SELECT postid, COUNT(postid) AS num_posts FROM posts GROUP BY postid HAVING COUNT(postid) > 10) AS subquery)\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(COUNT(CASE WHEN EXTRACT(YEAR FROM creationdate) = 2010 THEN 1 END) AS REAL) / COUNT(CASE WHEN EXTRACT(YEAR FROM creationdate) = 2011 THEN 1 END) FROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT id FROM posts WHERE ownerdisplayname ='slashnick' AND answercount = (SELECT MAX(answercount) FROM posts WHERE ownerdisplayname ='slashnick')\t----- bird -----\tcodebase_community",
    "326": "SELECT ownerdisplayname, SUM(viewcount) as total_views FROM posts WHERE ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY ownerdisplayname ORDER BY total_views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT T3.tagname FROM posts AS T1 INNER JOIN users AS T2 ON T1.owneruserid = T2.id INNER JOIN tags AS T3 ON T1.tags LIKE '%' || T3.tagname || '%' WHERE T2.displayname = 'Mark Meckes' AND T1.commentcount = 0 GROUP BY T3.tagname\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(SUM(CASE WHEN T2.tagname = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.id = T2.excerptpostid WHERE T1.ownerdisplayname = 'community'\t----- bird -----\tcodebase_community",
    "329": "SELECT (SELECT SUM(viewcount) FROM posts WHERE ownerdisplayname = 'Mornington') - (SELECT SUM(viewcount) FROM posts WHERE ownerdisplayname = 'Amos') AS ViewCountDifference\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(*) / 12.0 AS average_monthly_links FROM posts WHERE EXTRACT(YEAR FROM creationdate) = 2010 AND answercount <= 2\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.creationdate) FROM votes v JOIN users u ON v.userid = u.id WHERE u.displayname = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT u.displayname FROM users u JOIN badges b ON u.id = b.userid WHERE b.name = 'Autobiographer' ORDER BY b.date LIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.id) FROM users u JOIN posts p ON u.id = p.owneruserid WHERE p.favoritecount >= 4 AND u.location = 'United Kingdom'\t----- bird -----\tcodebase_community",
    "334": "SELECT id, title FROM posts WHERE ownerdisplayname = 'Harvey Motulsky' ORDER BY viewcount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT id, ownerdisplayname FROM posts WHERE EXTRACT(YEAR FROM cretiondate) = 2010 ORDER BY favoritecount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "336": "SELECT CAST(COUNT(CASE WHEN u.reputation > 1000 THEN p.id END) AS FLOAT) / COUNT(p.id) * 100 FROM posts p JOIN users u ON p.owneruserid = u.id WHERE EXTRACT(YEAR FROM p.creaiondate) = 2011\t----- bird -----\tcodebase_community",
    "337": "SELECT p.viewcount, p.lasteditordisplayname FROM posts p WHERE p.title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) FROM comments WHERE postid = (SELECT id FROM posts WHERE score = (SELECT MAX(score) FROM posts))\t----- bird -----\tcodebase_community",
    "339": "SELECT c.text, c.userdisplayname FROM comments c JOIN posts p ON c.postid = p.id WHERE p.title = 'Analysing wind data with R' ORDER BY c.creationdate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(COUNT(CASE WHEN p.score > 50 THEN p.id END) AS FLOAT) / COUNT(p.id) * 100 FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.reputation = (SELECT MAX(reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT excerptpostid, wikipostid FROM tags WHERE tagname ='sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT u.reputation, u.upvotes FROM users u JOIN comments c ON u.id = c.userid WHERE c.text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT c.text FROM comments c JOIN posts p ON c.postid = p.id WHERE p.viewcount BETWEEN 100 AND 150 ORDER BY c.score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) FROM posts WHERE commentcount = 1 AND EXISTS(SELECT 1 FROM comments WHERE comments.postid = posts.id AND comments.score = 0)\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(COUNT(CASE WHEN U.upvotes = 0 THEN C.id END) AS FLOAT) / COUNT(C.id) * 100 FROM comments C JOIN users U ON C.userid = U.id WHERE C.score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "346": "SELECT name FROM cards WHERE cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT name FROM cards WHERE bordercolor IS NULL AND cardkingdomfoilid IS NOT NULL AND cardkingdomid IS NOT NULL\t----- bird -----\tcard_games",
    "348": "SELECT cards.name FROM cards JOIN legalities ON cards.id = legalities.id WHERE cards.rarity ='mythic' AND legalities.format = 'gladiator' AND legalities.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.power = '*' OR T1.power IS NULL AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT T1.id, T2.text, T1.hascontentwarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.id WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT T1.name, T3.artist, T1.ispromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.id INNER JOIN cards AS T3 ON T1.id = T3.id WHERE T1.ispromo = 1 GROUP BY T1.name, T3.artist, T1.ispromo ORDER BY COUNT(T2.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT `bordercolor` FROM cards WHERE `name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards\t----- bird -----\tcard_games",
    "358": "SELECT (COUNT(T2.id) FILTER (WHERE T2.language = 'French')) * 100.0 / COUNT(T2.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.isstoryspotlight = 1\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originaltype = 'Summon - Angel' AND subtypes!= 'Angel'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE dueldeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T2.status = 'Banned' AND T1.bordercolor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT T1.id FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.colors = 'B' AND T1.originaltype LIKE '%Artifact%'\t----- bird -----\tcard_games",
    "363": "SELECT T1.manacost FROM cards AS T1 WHERE T1.layout = 'normal' AND T1.frameversion = '2003' AND T1.bordercolor = 'black' AND T1.availability ='mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(COUNT(CASE WHEN isstoryspotlight = 1 AND istextless = 0 THEN id END) AS REAL) * 100 / COUNT(id), id FROM cards WHERE isstoryspotlight = 1 AND istextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) FROM sets s JOIN set_translations st ON s.id = st.id WHERE s.block = 'Commander' AND st.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT T1.subtypes, T1.supertypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE power IN (NULL, '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id INNER JOIN rulings AS T3 ON T1.id = T3.id WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability.' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.type = 'Creature' AND T1.layout = 'normal' AND T1.bordercolor = 'black' AND T1.artist = 'Matthew D. Wilson' AND T2.language = 'French'\t----- bird -----\tcard_games",
    "370": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.basesetsize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN c.hascontentwarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(c.id) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.power) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(CASE WHEN istextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.mcmname = 'Archenemy' AND T1.code = 'ARC' GROUP BY T2.language\t----- bird -----\tcard_games",
    "376": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') AND convertedmanacost = (SELECT MAX(convertedmanacost) FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper'))\t----- bird -----\tcard_games",
    "378": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setcode = T2.setcode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(SELECT 1 FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Korean')\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards JOIN sets ON cards.setcode = sets.code JOIN set_translations ON sets.id = set_translations.id WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT CASE WHEN EXISTS (SELECT mtgofoilid FROM cards WHERE name = 'Angel of Mercy') THEN 'Yes' ELSE 'No' END AS appears_on_mtg_online\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM sets AS T1 JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT COUNT(*) > 0 FROM cards WHERE name = 'Adarkar Valkyrie' AND id IN (SELECT id FROM sets WHERE isforeignonly = 1)\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) FROM (SELECT sets.id FROM sets JOIN set_translations ON sets.id = set_translations.id WHERE set_translations.language = 'Italian' AND sets.basesetsize < 100) AS result\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T1.artist IN('Jeremy Jarvis','Aaron Miller','Chippy') AND T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND (power = '*' OR power IS NULL) AND setcode = 'Coldsnap'\t----- bird -----\tcard_games",
    "388": "SELECT T2.flavortext FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T2.language = 'Italian' AND T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT T2.text FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid INNER JOIN sets AS T3 ON T1.setcode = T3.code WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.multiverseid = T2.multiverseid WHERE T2.language = 'Italian' AND T1.setcode = 'Coldsnap' ORDER BY T1.convertedmanacost DESC LIMIT 1\t----- bird -----\tcard_games",
    "391": "SELECT CAST(COUNT(CASE WHEN T1.convertedmanacost = 7 THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(CASE WHEN T1.cardkingdomfoilid IS NOT NULL AND T1.cardkingdomid IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.name) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT T2.format, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T2.status = 'Banned' GROUP BY T2.format, T1.name ORDER BY COUNT(T2.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.edhrecrank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setcode = T2.code INNER JOIN legalities AS T3 ON T1.id = T3.id WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal' GROUP BY T1.name, T3.format\t----- bird -----\tcard_games",
    "396": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Korean' EXCEPT SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language LIKE '%Japanese%'\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT c.frameversion, c.name, l.format, l.status FROM cards c LEFT JOIN legalities l ON c.id = l.id WHERE c.artist = 'Allen Williams' AND l.status = 'Banned' UNION SELECT DISTINCT c.frameversion, c.name, NULL, NULL FROM cards c WHERE c.artist = 'Allen Williams' AND NOT EXISTS (SELECT 1 FROM legalities l WHERE c.id = l.id AND l.status = 'Banned')\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(CASE WHEN T1.element = 'o' THEN 1 ELSE 0 END) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(T3.count) FROM (SELECT T1.molecule_id, COUNT(T1.atom_id) AS count FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' GROUP BY T1.molecule_id) AS T3 JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.label = '+'\t----- bird -----\ttoxicology",
    "401": "SELECT molecule.molecule_id FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = '+' AND bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(CASE WHEN T2.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.atom_id) FROM bond AS T1 INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id INNER JOIN atom AS T2 ON T3.atom_id = T2.atom_id OR T3.atom_id2 = T2.atom_id WHERE T1.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9' UNION SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=' GROUP BY T1.element\t----- bird -----\ttoxicology",
    "405": "SELECT T2.label, COUNT(T2.label) AS count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY COUNT(*) LIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE (T1.element = 'i' OR T1.element ='s') AND T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT 100 - (SUM(CASE WHEN t2.element = 'f' THEN 1 ELSE 0 END) * 100 / COUNT(DISTINCT t1.molecule_id)) FROM molecule AS t1 INNER JOIN atom AS t2 ON t1.molecule_id = t2.molecule_id WHERE t1.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(CASE WHEN T3.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bond_id) FROM molecule AS T1 INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000' ORDER BY T2.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(COUNT(CASE WHEN bond_type = '=' THEN bond_id ELSE NULL END) AS REAL) * 100 / COUNT(bond_id) AS percentage FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) AS percent FROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) * 100 / COUNT(atom_id) AS percentage FROM atom WHERE molecule_id = 'TR206' GROUP BY molecule_id\t----- bird -----\ttoxicology",
    "415": "SELECT T2.element, T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT T2.bond_type, COUNT(T2.bond_type) AS bond_count FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' GROUP BY T2.bond_type ORDER BY bond_count DESC LIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' ORDER BY T1.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')\t----- bird -----\ttoxicology",
    "419": "SELECT T2.bond_type, T3.atom_id, T4.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id JOIN atom AS T3 ON T1.atom_id = T3.atom_id JOIN atom AS T4 ON T1.atom_id2 = T4.atom_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND SUBSTR(T2.atom_id, 7, 2) BETWEEN '21' AND '25' GROUP BY T1.molecule_id\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT T3.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'p' INTERSECT SELECT DISTINCT T3.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'n'\t----- bird -----\ttoxicology",
    "424": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type ='='GROUP BY T1.molecule_id, T1.label ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT COUNT(bond_id) / COUNT(T1.atom_id) AS average_bonds FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'I'\t----- bird -----\ttoxicology",
    "426": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id NOT IN (SELECT T2.atom_id FROM connected AS T2) AND T1.atom_id NOT IN (SELECT T3.atom_id2 FROM connected AS T3)\t----- bird -----\ttoxicology",
    "427": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#' AND T2.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "428": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19' UNION SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT T2.element FROM bond AS T1 INNER JOIN connected AS T3 ON T1.bond_id = T3.bond_id INNER JOIN atom AS T2 ON T2.atom_id = T3.atom_id2 WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bond_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id2 INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T4.bond_type = '-' GROUP BY T4.bond_type\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '#')) AND element IN ('p', 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT T1.element, T3.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN atom AS T3 ON T3.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT CAST(SUM(CASE WHEN T2.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND SUBSTR(T2.atom_id, 7, 1) = '4'\t----- bird -----\ttoxicology",
    "436": "SELECT T2.label,  SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.element) AS ratio FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006' GROUP BY T2.label\t----- bird -----\ttoxicology",
    "437": "SELECT T1.molecule_id FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) FROM satscores WHERE avgscrmath > 400 AND EXISTS (SELECT 1 FROM schools WHERE satscores.cds = schools.cdscode AND schools.virtual = 'F')\t----- bird -----\tcalifornia_schools",
    "439": "SELECT cdscode FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(T2.\"Free Meal Count (Ages 5-17)\" / T2.\"Enrollment (Ages 5-17)\") FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.cdscode WHERE T1.numge1500 / T1.numtsttakr > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT sname, charternum FROM satscores WHERE avgscrwrite > 499 AND NOT charternum IS NULL ORDER BY avgscrwrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT T2.school, T2.street, T2.city, T2.zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cdscode WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT T3.school FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.cdscode = T2.cds WHERE T1.\"Free Meal Count (K-12)\" / T1.\"Enrollment (K-12)\" > 0.1 AND T2.numge1500 > 0 INNER JOIN schools AS T3 ON T1.cdscode = T3.cdscode\t----- bird -----\tcalifornia_schools",
    "444": "SELECT T3.fundingtype FROM (SELECT T1.cds, AVG(T1.avgscrmath) AS avgmathscore FROM satscores AS T1 GROUP BY T1.cds) AS T2 JOIN schools AS T3 ON T2.cds = T3.cdscode WHERE T2.avgmathscore > 400 AND T3.county = 'Riverside'\t----- bird -----\tcalifornia_schools",
    "445": "SELECT T3.school, T3.street, T3.city, T3.state, T3.zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.cdscode = T2.cdscode INNER JOIN (SELECT cdscode FROM schools WHERE county = 'Monterey' AND gsoffered LIKE '%12%') AS T3 ON T1.cdscode = T3.cdscode WHERE T1.\"Percent (%) Eligible FRPM (Ages 5-17)\" > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT T1.avgscrwrite, T3.school, T3.phone FROM satscores AS T1 INNER JOIN schools AS T3 ON T1.cds = T3.cdscode WHERE T3.opendate > '1991-01-01' OR T3.closeddate < '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT T2.School_Name, T2.Doc FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cdscode = T2.cdscode WHERE (T2.\"Enrollment (K-12)\" - T2.\"Enrollment (Ages 5-17)\") > (SELECT AVG(\"Enrollment (K-12)\" - \"Enrollment (Ages 5-17)\") FROM frpm WHERE \"Charter Funding Type\" = 'Local') AND T2.\"Charter Funding Type\" = 'Local'\t----- bird -----\tcalifornia_schools",
    "448": "SELECT (\"Percent (%) Eligible Free (K-12)\") FROM frpm ORDER BY (\"Enrollment (K-12)\") DESC LIMIT 10 OFFSET 10\t----- bird -----\tcalifornia_schools",
    "449": "SELECT `Percent (%) Eligible FRPM (K-12)` FROM frpm WHERE `School Code` IN (SELECT `School Code` FROM frpm WHERE `Charter Funding Type` = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5)\t----- bird -----\tcalifornia_schools",
    "450": "SELECT T3.street, T3.city, T3.zip, T3.state FROM (SELECT T1.cds, T1.numge1500, T1.numtsttakr, (T1.numge1500::FLOAT / T1.numtsttakr) AS excellence_rate FROM satscores AS T1) AS T1 INNER JOIN schools AS T3 ON T1.cds = T3.cdscode ORDER BY T1.excellence_rate ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT T3.admfname1, T3.admlname1, T3.admfname2, T3.admlname2, T3.admfname3, T3.admlname3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cdscode INNER JOIN schools AS T3 ON T2.cdscode = T3.cdscode WHERE T1.numge1500 = (SELECT MAX(numge1500) FROM satscores)\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(T1.numtsttakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cdscode WHERE T2.opendate BETWEEN '1980-01-01' AND '1980-12-31' AND T2.city = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT T3.phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cdscode INNER JOIN frpm AS T3 ON T2.cdscode = T3.cdscode WHERE T3.\"District Name\" = 'Fresno Unified' ORDER BY T1.avgscrread ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT T3.school FROM (SELECT T1.cds, T1.avgscrread, T2.County, row_number() OVER (PARTITION BY T2.County ORDER BY T1.avgscrread DESC) AS rn FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cds WHERE T2.virtual = 'F') AS T3 INNER JOIN schools AS T4 ON T3.cds = T4.cds WHERE T3.rn <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT T1.school, T1.avgscrwrite FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cdscode WHERE T2.admfname1 = 'Ricci' AND T2.admlname1 = 'Ulrich' GROUP BY T1.school, T1.avgscrwrite\t----- bird -----\tcalifornia_schools",
    "456": "SELECT T1.school FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cdscode = T2.cdscode WHERE T1.doctype = '31' AND T2.`Enrollment (K-12)` IS NOT NULL ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 FROM schools WHERE doc = '52' AND district = 'Elementary School District' AND opendate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT CAST(COUNT(CASE WHEN doc = '54' THEN cdscode END) AS REAL) / COUNT(CASE WHEN doc = '52' THEN cdscode END) FROM schools WHERE county = 'Orange' AND doc IN ('52', '54')\t----- bird -----\tcalifornia_schools",
    "459": "SELECT T2.street FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.cdscode ORDER BY T1.avgscrmath DESC LIMIT 6,1\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) FROM schools s JOIN frpm f ON s.cdscode = f.cdscode WHERE s.charter = 0 AND f.`Percent (%) Eligible Free (K-12)` < 0.18 AND s.county = 'Los Angeles'\t----- bird -----\tcalifornia_schools",
    "461": "SELECT \"Enrollment (Ages 5-17)\" FROM frpm WHERE \"Academic Year\" = '2014-2015' AND \"School Name\" = 'State Special School' AND \"City\" = 'Fremont' AND \"EdOpsCode\" = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT T2.\"Percent (%) Eligible FRPM (Ages 5-17)\", T1.school FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cdscode = T2.cdscode WHERE T1.county = 'Los Angeles' AND T1.gsserved = 'KG-09'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT county, COUNT(*) as num_schools FROM schools WHERE virtual = 'F' AND (county = 'San Diego' OR county = 'Santa Barbara') GROUP BY county ORDER BY num_schools DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT gsoffered FROM schools WHERE ABS(longitude) = (SELECT MAX(ABS(longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(schools.city), schools.city FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 1 AND schools.gsserved = 'K-8' AND frpm.NSLP_Provision_Status = 'Multiple Provision Types' GROUP BY schools.city\t----- bird -----\tcalifornia_schools",
    "466": "SELECT T2.`Percent (%) Eligible Free (K-12)`, T2.`District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cdscode = T2.cdscode WHERE T1.admfname1 = 'Alusine' OR T1.admfname2 = 'Alusine' OR T1.admfname3 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT T1.admemail1, T1.admemail2, T1.admemail3 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.cdscode = T2.cdscode WHERE T1.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND T1.county = 'San Bernardino' AND T1.district = 'San Bernardino City Unified' AND (T1.soctype = 'Intermediate/Middle Schools' OR T1.doctype = 'Unified') AND T1.admemail1 IS NOT NULL OR T1.admemail2 IS NOT NULL OR T1.admemail3 IS NOT NULL\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.a3 = 'East Bohemia' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) FROM district WHERE a11 > 6000 AND a11 < 10000 AND district_id IN (SELECT district_id FROM client WHERE gender = 'F')\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.a3 = 'North Bohemia' AND T2.a11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT (SELECT MAX(T1.a11) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F') - (SELECT MIN(T1.a11) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F') AS gap, (SELECT account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC LIMIT 1) AS oldest_female_client_account_number\t----- bird -----\tfinancial",
    "472": "SELECT T2.account_id FROM (SELECT MIN(`birth_date`) AS min_birth_date FROM `client`) AS T1 JOIN `client` AS T2 ON T1.min_birth_date = T2.birth_date JOIN `account` AS T3 ON T2.district_id = T3.district_id WHERE T3.a11 = (SELECT MAX(a11) FROM `account`)\t----- bird -----\tfinancial",
    "473": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1997-01-01' AND '1997-12-31' AND T2.status = 'APPROVED' AND T1.frequency = 'POPLATEK TYDNE' ORDER BY T2.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 12 AND T1.date BETWEEN '1993-01-01' AND '1993-12-31' ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) FROM client WHERE gender = 'F' AND birth_date < '1950-01-01' AND district_id IN (SELECT district_id FROM district WHERE a2 = 'Sokolov')\t----- bird -----\tfinancial",
    "476": "SELECT T2.a2 FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT (CAST(COUNT(CASE WHEN T2.gender = 'M' THEN T2.client_id ELSE NULL END) AS REAL) / COUNT(T2.client_id)) * 100 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.a3 ='south Bohemia' AND T1.a4 = (SELECT MAX(a4) FROM district WHERE a3 ='south Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT ((SELECT t.balance FROM (SELECT t1.balance, t1.date FROM (SELECT account_id, date, balance FROM trans WHERE date = '1998-12-27') t1 INNER JOIN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' ORDER BY date ASC LIMIT 1))) t2 ON t1.account_id = t2.account_id) t WHERE t.date = '1998-12-27') - (SELECT t.balance FROM (SELECT t1.balance, t1.date FROM (SELECT account_id, date, balance FROM trans WHERE date = '1993-03-22') t1 INNER JOIN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' ORDER BY date ASC LIMIT 1))) t2 ON t1.account_id = t2.account_id) t WHERE t.date = '1993-03-22')) / (SELECT t.balance FROM (SELECT t1.balance, t1.date FROM (SELECT account_id, date, balance FROM trans WHERE date = '1993-03-22') t1 INNER JOIN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM client WHERE client_id IN (SELECT client_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' ORDER BY date ASC LIMIT 1))) t2 ON t1.account_id = t2.account_id) t WHERE t.date = '1993-03-22')) * 100.0\t----- bird -----\tfinancial",
    "479": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage FROM loan WHERE status = 'A' OR status IS NULL\t----- bird -----\tfinancial",
    "480": "SELECT (SUM(CASE WHEN T2.status = 'C' THEN T2.amount ELSE 0 END) * 100.0 / SUM(T2.amount)) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT T1.a2, ((T1.a13 - T1.a12) / T1.a12) * 100 AS increment_rate FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.client_id = T3.client_id INNER JOIN account AS T4 ON T3.account_id = T4.account_id INNER JOIN loan AS T5 ON T4.account_id = T5.account_id WHERE T5.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT T2.a2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.a2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) FROM loan JOIN account ON loan.account_id = account.account_id WHERE loan.amount >= 250000 AND loan.date BETWEEN '1995-01-01' AND '1997-12-31' AND account.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'Branch location 1') AND frequency = 'running'\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district ORDER BY a15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
    "486": "SELECT T2.a2, T1.amount FROM trans AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'Branch location 1') AND frequency = 'running'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district ORDER BY a15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
    "489": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date BETWEEN '1998-01-01' AND '1998-12-31' AND T2.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU') AND T2.operation = 'VYBER KARTOU' GROUP BY T1.account_id\t----- bird -----\tfinancial",
    "490": "SELECT T2.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.a11 BETWEEN 8000 AND 9000 AND T2.type!= 'OWNER' GROUP BY T2.type\t----- bird -----\tfinancial",
    "491": "SELECT AVG(T1.a15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.a15 > 4000 AND T2.date >= '1997-01-01'\t----- bird -----\tfinancial",
    "492": "SELECT * FROM trans WHERE trans.account_id IN (SELECT disp.account_id FROM disp WHERE disp.client_id = 3356) AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.a11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT (SUM(CASE WHEN EXTRACT(YEAR FROM T2.date) = 1997 THEN T2.amount ELSE 0 END) - SUM(CASE WHEN EXTRACT(YEAR FROM T2.date) = 1996 THEN T2.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN EXTRACT(YEAR FROM T2.date) = 1996 THEN T2.amount ELSE 0 END) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT (COUNT(CASE WHEN T1.gender = 'M' THEN T1.client_id END) * 100.0 / COUNT(T1.client_id)) AS percentage FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T1.client_id, T2.account_id ORDER BY T1.birth_date ASC, AVG(T1.a11) ASC LIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN trans AS T2 ON T2.account_id = T1.account_id WHERE T1.status IN('C', 'D') AND T2.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT T3.client_id,  (YEAR(CURRENT_DATE) - YEAR(T3.birth_date)) AS age FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial"
}
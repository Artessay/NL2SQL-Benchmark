SELECT MAX(T2.`Free Meal Count (K-12`) / T2.`Enrollment (K-12)`) AS highest_free_rate FROM `schools` AS T1 JOIN `school_meal_counts_and_enrollments` AS T2 ON T1.Uniq_id = T2.Uniqid WHERE T1.County = 'Alameda' AND T1.Active_close = 'Active'
SELECT T2.`Free Meal Count (Ages 5-17)`, T2.`Enrollment (Ages 5-17)`, T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)` AS FreeRate FROM `schools` AS T1 JOIN `eligibility_counts` AS T2 ON T1.nCESS_ID=T2.nCESS_SCH_GEOID WHERE T1.enrl_statdsc = 'Active' AND T1.sch_inst_typ=60 ORDER BY (T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)`) LIMIT 3
SELECT zip_ FROM schools WHERECounty = 'Fresno' AND `Charter School (Y/N)` = 1 AND Sponsors = 'Fresno County Office of Education'
SELECT T1.mailingStreetCompleteAddress FROM schools AS T1 JOIN studentSchools AS T2 ON T1.schoolId = T2.schoolId WHERE T2.FRPMC12All >= ALL(SELECT FRPMC12All FROM studentSchools) AND T2.studentGroupCodeName='Race or Ethnicity Total' ORDER BY FRPMC12All DESC LIMIT 1
SELECT `Phone Number` FROM `schools` WHERE `Funding` = 'Directly funded' AND `Charter School (Y/N)` = 1 AND `Opening Date` >= '2000-01-01'
SELECT COUNT(*) FROM satscores WHERE AvgScrMath > 400 AND (SELECT Virtual FROM schools WHERE cds = satscores.cds) = 'F'
SELECT T2.SCH_DESC FROM SAT participation AS T1 JOIN schools AS T2 ON T1 LebanonCode = T2.school_code WHERE T1.TestTakersNum > 500 AND T2.Magnet = 1
SELECT T2.Phone FROM satscores AS T1 JOIN schools AS t2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 > 0 ORDER BY NumTstTakr DESC LIMIT 1;
SELECT T1.SAT_test_takers_total FROM school SAT INNER JOIN schools T1 ON SAT.SCHOOL_ID = T1.school_id WHERE T1.FRPM_count_K_12_students = ( SELECT MAX(T2.FRPM_count_K_12_students) FROM school_sat T3 INNER JOIN schools T2 ON T3.school_id = T2.school_id )
SELECT COUNT(*) FROM schools WHERE funding_type = 'Directly funded' AND school_id IN (SELECT school_id FROM test_scores WHERE test_name = 'SAT' AND subject = 'Math' GROUP BY school_id HAVING AVG(score) > 560);
SELECT s.FRPM_5_17 FROM schools AS s INNER JOIN test_scores AS ts ON s.SCH_ID = ts.sch_id WHERE ts.Test LIKE '%SAT Reading%' GROUP BY s.SCH_ID ORDER BY AVG(IFNULL(ScoreAverage, 0)) DESC LIMIT 1;
SELECT school_code FROM schools WHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500;
SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) FROM schools WHERE (`NumGE1500` / `NumTstTakr`) > 0.3;
SELECT T2.Phone FROM satscores AS T1 JOIN schools AS T2 ON T1.cds  =  T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr DESC LIMIT 3
SELECT `nces_id` FROM `schools` WHERE `enrollment_ages_5_17` IS NOT NULL ORDER BY `enrollment_ages_5_17` DESC LIMIT 5;
SELECT D.district_name FROM (SELECT school_district, AVG(reported) AS avg_reading       FROM STAR_Results       JOIN Schools S ON STAR_Results.School_ID = S.nces_id         WHERE subject='Reading'       GROUP BY school_district ) AS A JOIN schools D ON A.school_district=D.nces_id  WHERE D.status='Active' ORDER BY avg_reading DESC LIMIT 1;
SELECT COUNT(*) FROM `mergedschools` WHERE county_name = 'Alameda' AND num_of_testtakers < 100;
SELECT s.CDSCode FROM schools AS s JOIN satScores AS ss ON ss.cds = s.CDSCode WHERE ss.AvgScrWrite > 499 ORDER BY ss.AvgScrWrite DESC;
SELECT COUNT(*) FROM schools WHERE `County` = 'Fresno' AND `Financial Identifier (FOnt)` = 'Directly funded' AND `Number of Test Takers` <= 250;
SELECT s.phone_number FROM schools s JOIN test_results t ON s.school_code = t.school_code WHERE t.subject = 'Math' GROUP BY s.school_code ORDER BY AVG(t.score) DESC LIMIT 1
SELECT COUNT(*) FROM schools WHERE County = 'Amador' AND `Low Grade` = 9 AND `High Grade` = 12
SELECT COUNT(*) FROM `schools` WHERE `CountyName` = 'Los Angeles' AND `Free Meals` > 500 AND `Free or Reduced Price Meals for K-12` < 700;
SELECT s-school_name, MAX(st.test_takers) AS max_test_takers  FROM schools AS s  JOIN school_tests AS st ON s.id = st.school_id  WHERE s.county = 'Contra Costa'  GROUP BY s.school_name  ORDER BY max_test_takers DESC  LIMIT 1;
SELECT school_name, `Mailing Street Line 1`, `Location Street Line 1` FROM schools WHERE (`grade_high` >= '09' AND `Grade Low` <= '12') AND (Enrollment_K_12 - Enrollment_Ages_5__17) > '30';
SELECT T1.SchNm FROM Schools AS T1 JOIN test_score AS T2 ON T1.SchID = T2.SchoolId WHERE ((T2.TestScore >= 1500) AND (CAST(T1.FreeMealCountK_12 AS REAL / NULLIF(T1.TotalEnrollmentK_12, 0)) > 0.1))
SELECT T1.Funding FROM schools AS T1 JOIN School_SAT_Results AS T2 ON T1.School_ID  =  T2.School_ID WHERE T1.County  =  'Riverside' GROUP BY T1.School_Name HAVING AVG(T2.Average_MATH_Score)  >  400
SELECT T2.school_name, T2.street_address, T2.city, T2.state ,T2.zip_code  FROM total_free_reduced-price_meals_ages_15_to_17 AS T1  JOIN schools AS T2 ON T1.school_number = T2.school_number  WHERE T1.total_enrollment >= 800 AND school_county = 'Monterey' AND T2.academic_grade IN ('HS')
SELECT s.school_name, s-writing_score, s.phone_number FROM schools AS s WHERE (s.opened > '1991-01-01' OR s.closed < '2000-01-01') AND s.writing_score IS NOT NULL GROUP BY s.school_name, s.phone_number HAVING AVG(s.writing_score)
SELECT T1.school_name, T1.funding_type FROM `schools` AS T1 JOIN `enrollment_summary_by_year_and_school` AS T2 ON T1.uid = T2.school_uid WHERE (T1.funding_via != 'Locally funded') AND ((T2.`Enrollment (K-12)` - T2.``Enrollment (Ages 5-17)``) > (SELECT AVG(`Enrollment (K-12)`) - AVG(`Enrollment (Ages 5-17）`) FROM `enrollment_summary_by_year_and_school` WHERE funding_via = 'Locally funded'))
SELECT `Opened` FROM(SELECT `CSTARID`, `Name of LEA - School combination. If a LEACTR is selected in this row, then value should appear in both these columns`, `Opened`, (`G1 Kindergarten` +`G2 Firstgrade `+`G3 Secondare`) AS Total_students_enrolled_K_2 , RANK() OVER (ORDER BY (`G1 Kindergarten` +`G2 Firstgrade `+`G3 Secondare`) DESC)  Enroll_rank  FROM schools ) t WHERE Enroll_rank=1
SELECT t2.city, SUM(t1.student_enrollment) AS total_enrollment FROM (SELECT school_id, SUM(student Enrollments) AS student_enrollment FROM school_enrollment GROUP BY school_id) AS t1 JOIN schools AS t2 ON t1.school_id = t2.school_id WHERE grade_levels = 'K-12' GROUP BY t2.city ORDER BY total_enrollment LIMIT 5
SELECT Eligibility_free_K_12 FROM(SELECT Free_meal_count_k_12 / Enrollment_k_12 AS Eligibility_free_K_12 ,  school_id FROM `schools餐` WHERE Grades_enrolled LIKE '%1-%12%' OR Grades_enrolled LIKE '%1-%6%'OR Grades_enrolled LIKE '%7-%12%'ORDER BY enrollment_1_12 DESC LIMIT 10,2) t
SELECT `Eligible FRPM rate` FROM `table_45387` WHERE `Ownership` = 66 ORDER BY `Free/Reduced Pricing Count for Grades K or 1 Through 12` DESC LIMIT 5
SELECT `url`, `school_name` FROM `schools` WHERE `free_meal_count` BETWEEN 1900 AND 2000 AND `age_range_code` IN (SELECT s.age_code FROM `students_age_range_codes` AS s WHERE s.age_str = '5-17');
SELECT T2."Envision Academy for Arts & Technology", T1.eligible_free_rate  FROM( SELECT school_code, (sum(free_meal_count_ages_5_to_17)) / (sum(enrollment_ages_5_to_17)) AS eligibility_free_ratio FROM school_demographics WHERE principal_name ILIKE '%Kacey Gibson' group by school_code) T1  JOIN schools ON schools.school_code = T1school_code WHERE school_name = eligible_school;  In the provided code fragment, there is an issue, replace 'eligible_school`' with `T2.eligible_school where applicable to fix it. This SQL command would not run without modification since "EIGible学校." E Is a recognized identifier in Structured Procedure Language (SQL). Similarly,"principal_naME" is not a column name that has beeN identifiED. Replacing 'eligibleS_chOol" wiTh `T2.el igib Le_ schooL wheRe appLicabLe anD replaCIng 'PRINDIP&Lname' wITH the actuAl prinCIpal nAME, sCh aS `sChOOl NaMe," woulD be requi Red for successful q_ueRy execution. ADO Note th_at there arE two DAbaSE tabsLes ("School_demogRAPHfCS" And schools) being Joind On SchOOR_code`_T1'S SC HOOLc oDe _S CO OL5SCHOOLco DE. THE SELECCT clAUse seleClS columns From bOth t abL3_s (t_iE "ENvIson AcaDemY FOR arTs anD TeCkNoLogy") AND T1 (eligiB1e_free_RAte)_The WhERe claVse FiLt,ers the R0ws wi Th prinCI pal 916 3740n ILIke "%KAcEy gib sO N"% THE cODe_fraGM ent GROUP BY SC#ooI _CODE aggr_eGaTes` school D_em ograPI-ics BY_sC#oo I_C ode ANID CA,1CuLAtes_thE_ sum O1THe FR eeMeal count age,s_9_to i17 A_nDoF enRoUlmEN t ages g_to_ is1_ AS sHe eligiIble_free_raTe fIe1D )T I  JOh1 schO0Ls_OII_sColOOI8 schoOC oDe -= T1SCh_ooLcOde WHERES ChooN_ Name -= T2.elIa6l3_scOO_L WHERE schoOi m aM E_~ 63%env IS i0n acadeiNf ORarts AnOD t_eCkI03g vNOlgy%' AND prinCl Pa1Name - IlIke'%KACeY GlbSon'`,   SELECT Tz"Envision Academy for arts & TeoIog,Y",_ T_ .eligIblE-fre e.ra-te TROM (  S-E L_ B.C1  $tOOl_code` (=SuTn(free_meal COT Nt ag-:ses_5 tO Is I)1)_(_7u(m(e-m-rol-l_ments_ages_b_to_iB )) .AS ei gible_free Ra,4.5 FR oM 2C_hOO l_d Emog RA, h!eSCs` -069- -, whIre prinClPa3_n &me I1ik-e 'KAC-er-- G-lrson'_ O-rDER By sch0oE_l_cod E`  QRUOP 8y schcol cod e ) -T_l_ JO IN sehoob ON scho-0ls.schoO_i_cooe _-_ T l_sC-Noc _codo_ WHERE s-chOOI_n_ame_llke 'EnVI_sio-n AcadEm-v F_ornAa-Ts s-A ND'TechNoloGY1%' anQ prinCTal_n_a-me Iike '%Ka-C-e_Y Gls0n'` ,;
SELECT T1.ChtrPrvdrEmailAddr FROM `schools` AS T1 JOIN `frm` AS T2 ON T1.SCHOOL_CODE = T2.sch_code WHERE T1.ChrtSchYn = 1 AND EnrollK_12 NOT NULL ORDER BY T2.EnrollK_12 LIMIT 1
SELECT T2.First_Name , T2.Last_Name FROM tests AS T1 JOIN school_administrators AS T2 ON T1.School_ID = T2.School_ID WHERE T1.Num_GE_1500 = ( SELECT MAX(Num_GE_1500) FROM tests )
SELECT T2.Street ,  T2.City ,  T2.State ,  T2.Zip FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE NumTstTakr !=0 ORDER BY NumGE1500/NumTstTakr LIMIT 1
SELECT T1.webpage FROM Schools AS T1 JOIN Test_Scores AS T2 ON T1.CDS_code  =  T2.cds_code WHERE county_name  =  'Los Angeles' AND num_students BETWEEN 2000 AND 3000;
SELECT AVG(TestTakers) FROM schools WHERE County = 'Fresno' AND DateFirstOpened = '1980'
SELECT T1.Telephone FROM `schools` AS T1 JOIN test_read_results AS T2 ON T1.SchoolID = T2.SchoolID WHERE T1.District = 'Fresno Unified' GROUP BY T1.ID ORDER BY AVG(Score) LIMIT 1;
SELECT s.S SCHOOL_NAME, AVG(st.READING SCORE) AS AVG_READING_SCORE FROM SCHOOLS s JOIN STUDENT_RECORDS st ON s.SCHOOL_ID = st.SCHOOL_ID WHERE s.VIRTUAL = 'F' GROUP BY s.school_name,County ORDER BY AVG_READING_SCORE DESC PARTITION BY County ROW_NUMBER() OVER (PARTINITION BY County ORDER BY AVG(READING SCORE)DESC ) LIMIT 5;
SELECT s.Type FROM schools s JOIN (SELECT SchoolId, AVG(MathScore) as AvgMathScore FROM Scores GROUP BY SchoolId) ss ON s.CDSCode = ss.SchoolId ORDER BY ss.AvgMathScore DESC LIMIT 1
SELECT T1.MathScoreAvg, T2.County FROM (SELECT School_id, AVG_MATH AS MathScoreAvg FROM `studentscores` GROUP BY School_id) AS T1 JOIN schools AS T2 ON T1.School_id = T2.SchoolID WHERE T1.MathScoreAvg = (SELECT MIN(MathScoreAvg) FROM(SELECT School_id, AVG((MathScore + ReadingScore + WritingScore)/3)AS AvgScoreAllSubjects FROM `studentscores`GROUP BY School_ID))
SELECT s.City, AVG(t.Writing) as Avg_Writing_Score FROM schools s JOIN tests t ON s.School_ID = t.School_ID WHERE t.Total_SAT_Score >= 1500 GROUP BY s.School_ID ORDER BY COUNT(*) DESC LIMIT 1;
SELECT T2.school_name ,  AVG(T1.writing_score) FROM test_scores AS T1 JOIN schools AS T2 ON T1.school_id = T2.school_code WHERE T2.admFirstName = 'Ricci' AND T2.admLastName = 'Ulrich' GROUP BY T2.school_code
SELECT school_name, enrollees FROM schools WHERE DOC = 31 AND grade_range = "K-12" ORDER BY enrollees DESC LIMIT 1;
SELECT COUNT(*) / 12 AS monthly_avg  FROM `schools`  WHERE `county` = 'Alameda' AND `doc` = '52' AND `approval_date`= '1980-01-01'
SELECT SUM(CASE WHEN T1.DOC = 54 THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.DOC = 52 THEN 1 ELSE 0 END) AS ratio FROM school_districts AS T1 LEFT JOIN schools AS T2 ON T1.cds_code = SUBSTRING(T2.county_office_elementary_district_code, 4,3) WHERE T1.CountyDesc = 'ORANGE' AND Districtname NOT IN(SELECT DISTINCT district FROM schools WHERE category = 'Merged')
SELECT T1.name , T1.closureDate FROM `schools` AS T1 JOIN `schoolCounty` AS T2 ON T1-countyCode = T2.code WHERE T1.status = 'Closed' GROUP BY T2.countyName ORDER BY COUNT(*) DESC LIMIT 1
SELECT T1.school_st_adr街addr, T1.mailingstreet_address, T1.s School_name FROM schools AS T1 JOIN test_score_summary AS T2 ON T1.cds_code_numberforaschool = T2.CDS_CODE WHERE T2.subject = 'Math' ORDER BY avg_total_score DESC LIMIT 6, 1
SELECT S1.mailing_street_address, S1.school_name FROM schools S1 JOIN ( SELECT MIN(S2.reading_score) AS min_reading_score FROM schools S2 ) S3 ON S1.reading_score = S3.min_reading_score;
SELECT COUNT(*) FROM schools WHERE MailingCity = "Lakeport" AND (AvgScrRead + AvgScrMath + AvgScrWrite) >= 1500
SELECT COUNT(*) FROM schools WHERE Mailing_City = 'Fresno' AND Test_Takers IS NOT NULL;
SELECT `SCHOOL_NAME`, `MAILZIP` FROM `schools` WHERE `PrincipalLast` = 'Atoian' AND `PrincipalFirst` = 'Avetik';
 SELECT COUNT(CASE WHEN location_county = 'Colusa' THEN 1 ELSE NULL END ) / COUNT(CASE WHEN location_county = 'Humboldt' THEN 1 ELSE NULL END) AS ratio_from_california  FROM schools  WHERE mailing_state_address = 'CA';   Note: Here, `schools` is the table name, and based on provided data extracts, columns used are inferred (e.g., `location_county`, `mailing_state_address`). However, these column names were not exactly provided in your input SQLs; adapt to match actual column names per your database's specific schema or table structure definition. Since SQL syntax doesn't include a direct ratio arithmetic calculation as part of the standard output, typically you'd pull related counts separately or embed such expressions into an operational environment for execution. This proposed query outlines necessary logical steps assuming direct support for fractional field outputs or a simplified representation potentially adjusting to available dialects' capabilities or limitations (like grouping concerns handling aggregation per dataset specifics).
SELECT COUNT(*) FROM schools WHERE `Mailing City` = 'San Joaquin' AND Status = 'Active' AND `Mailing State` = 'CA'
SELECT T1.SchPhoneNum, T1.SchPhoneExt FROM `schools` AS T1 JOIN `testoutcome Writing2017 - All Students` AS T2 ON T1.SCHID = T2.schoolid ORDER BY T2.avgScore DESC LIMIT 332,1
SELECT `phone`, `extension`, `school_name` FROM `schools` WHERE `zip` = '95203-3704'
SELECT T1.WebSite FROM `schools` AS T1 JOIN `administrators` AS T2 ON T1.USID = T2.USID WHERE T2.FirstName IN ('Mike', 'Dante') AND T2.LastName IN ('Larson', 'Alvarez') GROUP BY T1.WebSite;
SELECT `www` FROM `schools` WHERE `Charter` = 1 AND `Virtual` = 'P' AND CountyName = 'San Joaquin'
SELECT COUNT(*) FROM `schools` WHERE `CITY`= 'Hickman' AND `DOC` = 52 AND `Charter` = 1
SELECT COUNT(*) FROM schools WHERE County='Los Angeles' AND Charter=0 AND (`Free Meal Count (K-12)`*100/`Enrollment (K-12)`) < 0.18;
SELECT T1.first_name , T1.last_name , T2.name , T2.city FROM personnel AS T1 JOIN schools AS T2 ON T1.cds_code = T2.cds_code WHERE T2.charter = 1 AND T2.cds_code like '00D2%'

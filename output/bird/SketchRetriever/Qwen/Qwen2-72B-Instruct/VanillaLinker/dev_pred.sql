SELECT MAX(`meal_program_percent_free` ) FROM (((`schools` LEFT JOIN `districts` ON schools.sponsor_code  =  districts.cd_code ) WHERE districts.county_name_alpha  =  "Alameda") WHERE schools.end_grade BETWEEN (SELECT LEAST(K,12)) AND (SELECT GREATEST(L, 12)))
SELECT t2.`School Year` ,  t2.FREE ,  t1.Continuation FROM ( SELECT `school id` ,  `name of school` ,  SchoolYear ,  CONTINUOUS = CASE WHEN TYPE='Continuation' THEN Name_of_School ELSE NULL END AS [Continuation] FROM `chart276_5yrend` WHERE `county name`= 'Alameda') AS t1 JOIN ( SELECT `School Year` ,  `school id` ,  `Name of Charter Organization or School District Name` ,  SUM(`Free Meal Count (Ages 5-17)`) AS FREE ,  SUM(Enrollment) AS TOTAL_5_to_17 FROM `students5to17byenrollmentstatus` GROUP BY 'School Year' ,  `name of charter organization and school district name` UNION SELECT * FROM chart2 GROUP BY a.CDSCode ORDER_by 'Percent' LIMIT top('32804')) AS t2 ON t1.Continuation=t2.name WHERE ELIGIBLE_<= ((SELECT MIN(Percentage_Eligible_for_Free_or_Reduc_from_students5to17byenrollmentstatus)) FOR TYPE 5 to 17) ORDER BY ELIGIBLE_ LIMIT 3) AS x LEFT JOIN `School Information` ON x.name = ''school name'' WHERE status = "open"
SELECT `Zip` FROM edmund.cde_facts2013 AS facts INNER JOIN edmund.cde_ffrm2015 AS c ON facts.SIID_2013 = c.SIID USING  (SIID) WHERE County_Code = "0617" AND c.`Charter School(y/n)(FR)` = "Y"
SELECT `mailing_street_2` FROM `schools` JOIN `ca_federal_identification_code_crosswalk` ON `schools.fcc_id` = `ca_federal_identification_code_crosswalk.lea_numeric` WHERE SUBSTRING(`FRPM_Students_Eng`, 3, 10) = 'highest' GROUP BY mailing_street_2 LIMIT 1;
SELECT phone FROM schools WHERE `Charter School (Y/N)` = 1 AND YEAR(startdate) > 2000 AND funding_option_code = 'Directly funded'
SELECT COUNT(*) FROM `schools` WHERE `Virtual` = 'F' AND `SAT_Average_Score_Math` > 400;
SELECT t1.schoolname FROM schools AS t1 JOIN cspparticipation AS t2 ON t1._id = t2._id WHERE (t1.magnet = 1 AND t2.sat = "") OR (t1.magnet = 1 AND t2.sat > 500)
SELECT t2.PrimaryPhone FROM(SELECT SchoolID, COUNT(*) AS TestTakers FROM SAT WHERE Writing > 0 AND Math > 500 GROUP BY SchoolID HAVING AVG(Writing + Math + Critical_Reading) >= 1500) AS t1 JOIN Schools AS t2 ON t1.SchoolID = t2.SchoolCalId ORDER BY TestTakers DESC LIMIT 1
SELECT T2.SAT_takers FROM (SELECT DistrictName, MAX(FRPM_Students) AS MaxFRPM Students FROM Schools WHERE SchoolTypeAbbreviation = 'K-12' GROUP BY DistrictName) AS T1 JOIN (SELECT DistrictName, SAT_takers FROM Schools WHERE SchoolTypeAbbreviation = 'K-12') AS T2 ON T1.DistrictName = T2.DistrictName WHERE FRPM_Students = MaxFRPM_Students
SELECT COUNT(*) FROM schools WHERE fundingAgencyCode = 'Directly funded' AND mathSATAverageScore > 560
SELECT T2.FRPM_5_17 FROM `test_scores` AS T1 JOIN `schools` AS T2 ON T1.school_id = T2.school_id WHERE test_type_description = 'SAT' AND test_subject_description = 'Reading' ORDER BY average_score DESC LIMIT 1
SELECT Code FROM schools WHERE (`enroll_k_12` + `enroll_ages_5_17`) > 500;
SELECT MAX(`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`) as Eligible_Free_Rate FROM schools WHERE ` SAT_2400 Excellence Rate` > 0.3;
SELECT T.phone FROM (SELECT SchoolId, excellence_rate AS SATrate FROM (SELECT Schoolid, numge1500, numtsttakr, NumGE1500/NumTstTakr AS excellence_rate FROM sat) WHERE NOT numtsttakr IS NULL AND NOT numge1500 IS NULL) T ORDER BY T.SATrate DESC LIMIT 3) TT JOIN schools S ON S.schoolid = TT.SchoolId
SELECT `school_id` FROM `schools` WHERE `enrollment_5_17` IS NOT NULL ORDER BY `enrollment_5_17` DESC LIMIT 5;
SELECT t.district FROM (SELECT t1.district, AVG(t2.reading_score) as avg_reading FROM schools AS t1 JOIN test_score_2008_09 AS t2 ON t1 SchooID  = t2.school WHERE t1.Status = 'Active' AND t2.Category = 'State Totals' GROUP BY t1.district ORDER BY avg_reading DESC LIMIT 1) AS t;
SELECT COUNT(*) FROM(SELECT `schools.Cd` FROM `ap_2010` JOIN `schools` ON (`schools.Cd` = `ap_2010学校编号`) WHERE(`schools.County` = "Alameda" AND `ap_2010.Test takers ` < 100) GROUP BY `schools.Cd`) AS evelyn;
SELECT s.Name, s.Charter_number FROM schools AS s JOIN test_score AS ts ON s.St_school_code = ts.school_code WHERE ts.Assessment_year = '2019' AND ts.Content_area = 'Writing' AND CAST(ts.Average_score AS FLOAT) > 499 ORDER BY cast (ts.Average_score as Float) DESC;
SELECT COUNT(*) FROM `schools` WHERE countyoffice = 'Fresno County Office Of Education' AND funding = 'Directly funded' AND totalnumberoftesttakers <= 250;
SELECT schools.phone FROM schools WHERE schools.school_api_score = (SELECT MAX(schools.school_api_score) FROM schools JOIN suspensions ON schools.id = suspensions.school_id GROUP BY schools.id, schools.school_api_score HAVING AVG(suspensions.percentage_of_math_meeting_standards + suspensions.percentage_of_reading_meeting_standards)/2 = (SELECT MAX AVG(suspensions.percentage_of_math_meeting_standards + suspensions.percentage_of_reading_meeting_standards)/2 FROM schools JOIN suspensions ON schools.id = suspensions.school_id GROUP BY schools.id));
SELECT COUNT(*) FROM `schools` WHERE `Location` = 'Amador' AND `Low Grade` = '9' AND `High Grade` = '12';
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND (CASE WHEN demographic_info ->> 'free_meals' > 500 THEN 1 ELSE 0 END) AND (CASE WHEN demographic_info ->> 'reduced_price_meals' < 700 THEN 1 ELSE 0 END) AND grade_range = 'K-12';
SELECT schools.school_name FROM schools INNER JOIN student_test_result_summary ON schools.school_code = student_test_result_summary.school GROUP BY student_test_result_summary.school ORDER BY SUM(student_test_result_summary.number_of_students) DESC LIMIT 1 WHERE schools.county_ename='Contra Costa' AND student_test_result_summary.grade_level_3_8='3';
SELECT school_name ,  CONCAT(address_line1 ,address_city_state_zip) FROM schools WHERE (CAST(`enrollment_K_12` AS INT) - CAST(`enrollment ages_5_17` AS INT)) > 30;
SELECT t1.SCH_NAME FROM schools AS t1 JOIN fact_academics_revised AS t2 ON t1.sch_id = t2.fact_acc_sch_id_rev WHERE ((cast(t2.free_meal as real) / t2.enrollment_k12Rev) > 0.1) AND ((t2.math_grade3_6Rev >= 1500) OR (t2.math_aRev >= 1500) OR (t2.math_eaCRev >= 1500))
SELECT T1.SCHOOL_NAME ,  T1.FUNDING_TYPE FROM `schools` AS T1 INNER JOIN `test_results_all_fields` AS T2 ON LOWER(REPLACE(T1.LEA_CODE, ' ', '')) LIKE '%' + LOWER(REPLACE(replace(trim(T1.SCHOOL_ID),'0'),' ','')) + '%' WHERE T2.AVERAGE_MATH > 400 AND T1.COUNTY = 'Riverside' GROUP BY T1.SCHOOL_NAME HAVING AVG(T2.AVERAGE_MATH) > 400
SELECT `School`, `Street`, `City`, `State (st)`, `ZIP code` FROM schools  WHERE `District enrollment, Free/Reduced meals: Grade(s) 15-17` > 800 AND `County` = "Monterey" AND `"SCHOOL TYPE COMPOSITE CODE-DESC"` LIKE '%High School%';
SELECT T1.school_name ,  AVG(T2.avg writing score) FROM schools AS T1 JOIN scores AS T2 ON T1.school id = T2.school id WHERE open_date > 1991 OR closed_date < 2000 GROUP BY T1.school_name ; SELECT T1.phone_number FROM schools AS T1 JOIN scores AS T2 ON T1.school id = T2.school id WHERE open_date > 1991 OR closed_date < 2000;
SELECT t1.SchName ,  t1.SCH_DOCTR_TYPE FROM `schools` AS t1 JOIN `facts` AS t2 ON t1.SPIDX_SCHOOL = t2.IDX_School WHERE (t2.Fund_Type LIKE 'Local' OR t2.Fund_Type = 'LOC2') AND t2.`Enrollment (K-12)` - t2.`Enrollment (Ages 5-17)` > AVG(t2.`Enrollment (K-12)` - t2. `Enrollment (Ages 5-17)`) OVER ( WHERE Fund_Type LIKE 'Local' OR Fund_Type = 'LOC2') GROUP BY t1.SchName ;
SELECT T1.Opening_Date FROM `schools` AS T1 JOIN `school_details` AS T2 ON T1.School_ID = T2.School_ID WHERE T2.Grades_LowestOffered = 0 AND t2.Grades_HighestOffered >= 3 ORDER BY total_enrollment DESC LIMIT 1
SELECT CITY FROM SCHOOLS WHERE GRADES_OFFERED != 'K Only' GROUP BY CITY ORDER BY SUM(KINDERGARTEN + GRADE_1 + GRADE_2 + GRADE_3 + GRADE_4 + GRADE_5 + GRADE_6 + GRADE_7 + GRADE_8 + GRADE_9 + GRADE_10 + GRADE_11 + GRADE_12) ASC LIMIT 5;
SELECT schools.school_name , free_meal_percentage FROM schools JOIN(SELECT SchoolId, enrollment12, round(FREE_MEAL_COUNT__12 / NULLIF(enrollment12, 0) * 100, 2) as free_meal_percentage FROM(SELECT d.schoolid, COUNT(DISTINCT c.studentUniqueId) AS  enrollment12   FROM fact_asmt_outcome_per_stu_grade_all_fy_dsp c    RIGHT JOIN dim_student_enrollment e   ON c.studentUniqueId = e.StudentUniqueIDENTIFIER AND       c.SCHOOLYEAR = e.EnrYrStartSchoolYear      JOIN dim_grade g ON     c.ASMT_PER_STUDENT_GRADE_CD_KEY =g.GradeCd     JOIN dim_staff_school_relationship_bak d ON c.schoolid=c.SchoolId and c.SCHOOLYEAR=e.EnryeRstartHsChoolyear       GROUP BY b.cohortyr)  AS enroll INNER join(SELECT SCHOOLID, NULLIF(SUM(ISNULL(FREELUNCHIND_CD,'0')::int),'0') as FreeMealFromFamilyIncome FROM dbo.MASTST2018GROUPBY SCHOOLID UNION SELECT schoolid ,sum(nullif(freelunchEligCDEnum::intval '0'),'0'))AS freemeal) AS free ON enroll.SCHOOlID=free.schoolId)d on schools.id = d.SchoolId limit 11 OFFSET 9 ;
SELECT TOP 5 T3.[Eligible free or reduced price meal rate], T2.CampusCode FROM Schools AS T1 INNER JOIN CNTY_CDS_SCHOOL_4 AS T2 ON T1.SchoolCDN_SAS_ExactValue = T2.CampusCode INNER JOIN FRPMSumDataChart1 AS T3 ON T2.RecordCode = T3.record_code_and_year AND 5 > T3.[(Rank Order) Rank for district: # schools w/ OwnershipType=66] WHERE (T2.GradesOffered = 'K-12' AND T2.Sch_Ownershipcode = 'School owned, operated and/or sponsored with Public authority') OR T1.sshOwnership_SAS_CodeExactValue LIKE '%[!N,T]' ORDER BY 4 DESC
SELECT website_address, school_name FROM schools WHERE free_meal_5_to_17 BETWEEN 1900 AND 2000;
SELECT T2.\`Free Meals Count Ages 5-17\`/T2.\`Enrollment Ages 5-17\` FROM `schools` AS T1 LEFT JOIN school_food_service SF ON sf.schoolid = t1.uschoolcode left join school_summary s on s.SCHOOLID=sF.school where T1.s_principal_f_name   =  'Kacey' AND T1.s_principal_l_name   =  'Gibson'
SELECT T1.MainEmail FROM schools AS T1 JOIN frpm AS T2 ON T1.FundingControl = T2.fundingcontrol WHERE T1.SchChartY  = '1' ORDER BY EnrlmntK_12 ASC LIMIT 1
SELECT MAX(T2.NumGE1500), T1.Principalfirstname, T1原理lastname FROM(SELECT *, rank() OVER(ORDER BY NumGE1500 DESC) AS rnk FROM SATscores WHERE Schoolid IN(select SchoolID from Schools where County='Alameda'))T2 join Schools as T1 on Substring(T2.Schoolid,-6)=T1.schoolid  WHERE rnk = 1 GROUP by T1.Principle_firstname,T1.princial_lastname;
SELECT T1.street ,  T1.city ,  T1.zip ,  T1.state FROM `schools` AS T1 INNER JOIN ( SELECT * ,  NumGE1500 / NumTstTakr AS excellence_rate FROM `performance_levels` ) AS T2 ON T1.cds_code = T2.school WHERE T2.excellence_rate = ( SELECT MIN(excellence_rate) FROM ( SELECT NumGE1500 / NumTstTakr AS excellence_rate FROM `performance_levels` ) )
SELECT T2.webpage_url FROM school_appeal_outcome AS T1 JOIN schools AS T2 ON T1.school_code = T2.schoo l_code WHERE T2.appeal_school_year = 2015 AND T2.county_name = "los angeles" AND T1.num_testtakers BETWEEN 2000 AND 3000
SELECT AVG(Test_Takers) FROM schools WHERE County = 'Fresno' AND Opened_date LIKE '%1980%'
SELECT T1.school_phone FROM schools AS T1 JOIN scores AS T2 ON T1.school_id = T2.school_id JOIN `districts` AS T3 ON LOWER(T3.name_district) = lower( " Fresno Unified ") WHERE assessment = 'Reading' AND Year < 2015 GROUP BY T1.school_id ORDER BY AVG(score_level_1) ASC LIMIT 1
SELECT T2.SchoolName FROM (SELECT SchoolID, AVG(ReadingScore) AS AvgReadingScore FROM testing.t_testscores WHERE ScoreCategoryDescription = 'California Standards Test(CST)' AND YearID <= 2014 GROUP BY SchoolID) T1 INNER JOIN testing.schools T2 ON T1.SchoolID = T2.School_ID WHERE T2.VirtualOrBrickandMortar = 'F' ORDER BY (SELECT AVG(ReadingScore) FROM testing.t_testscores WHERE SchoolID = T1.SchoolID AND ScoreCategoryDescription = 'California Standards Test(CST)' AND YearID <= 2014) DESC LIMIT 5;
SELECT T1.Description FROM school_type as T1 JOIN schools AS T2 ON T1.Code  =  T2.SCH_TYPE_CODE JOIN test_results SchoolsTestResults ON SchoolsTestResults.SchoolObjectId = T2.SourceSystemIdentifier ORDER BY AVG_MathScore DESC LIMIT 1
SELECT T2.CountyName, T1.AvgScoreMath FROM (SELECT SchoolID, MIN(AvgScore) AS AvgScoreMath FROM (SELECT SchoolID, AVG(ScoreMath) AS AvgScoreMath, AVG(ScoreReading) AS AvgScoreRead, AVG(ScoreWriting) AS AvgScoreWrite FROM star Reading NATURAL JOIN star Math NATURAL JOIN STAR Writing GROUP BY SchoolID) WHERE AvgScoreMath + AvgScoreRead + AvgScoreWrite = (SELECT MIN(AvgScoreMath + AvgScoreRead + AvgScoreWrite) FROM starReading NATURAL JOIN starMath NATURAL JOIN StarWriting) GROUP BY schoolid ) AS T1 JOIN Schools AS T2 ON T1.SchoolID = T2.SchoolNo;
SELECT avg(T2.writing), T3.city FROM sat_test t1 JOIN testing AS t2 ON t1.id = t2.schoolid WHERE t1.test_taken >= ALL(SELECT test_taken FROM sat_test WHERE total_sat_scores >= 1500) AND t1.total_sat_scores > = 1500 JOIN schools AS t3 ON t1.sid = t3.csah_sid GROUP BY t3.city;
SELECT s.school_name, AVG(t.writing_score) as avg_writing_score FROM schools AS s JOIN test_results AS t ON s.id_number = t.school_id WHERE s.principal_first_name = 'Ricci' AND s.principal_last_name = 'Ulrich' GROUP BY s.school_name;
SELECT TOP 1 SchoolName ,  COUNT(*) AS Enrollees FROM dbo.schdata WHERE doc = 31 AND min_grade BETWEEN 'K' AND '12' AND max_grade BETWEEN 'K' AND '12' Group bySchoolName ORDER BY Enrollees DESC
SELECT COUNT(*) / 12 AS monthly_avg_num_schools FROM schools WHERE SUBSTR(`Opening Date`, -4) = '1980' AND DOC = '52' AND County_Name = 'Alameda';
SELECT CAST(SUM(CASE WHEN T1.DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.DOC = 52 THEN 1 ELSE 0 END) FROM school_districts AS T1 JOIN schools AS T2 ON T1.SADLCDB.setCode = T2.SADLCDBetCode WHERE T1.locationCounty = 'Orange' AND T2.statusDesc IN('Merged', 'Disestablished')
SELECT T2.SchoolName, T2.StatusEffectiveDate FROM `schools_types` AS T1 JOIN `schools_public` AS T2 ON T1.SchoolTypeID = T2.SchoolType WHERE T2.CountyCode = (SELECT CountyCode FROM(SELECT CountyCode,COUNT(*) AS SchoolNumToBeClosed FROM schools_public SP, `charter status type lookup chart` CL WHERE SP.countCharterStatusID IN (Select StatusId From CL Where Description ="Closed")GROUP BY CountyCode ORDER BY COUNT(*) DESC LIMIT 1) ) AND Subquery3.SchoolId = T2.schoolPublicId And (T2.PublicSchoolOrLocalEducationAgencyOperationalStatus =0 OR T2.PublicSchoolOrLocalEducationAgencyOperationalStatus IS NULL) AND T2.CharterSchoolStatusCode ="Charter"UNION SELECT T4.SchoolName,MAX(T5.status_effective_date)-1 DaysBeforeMAXstatus_effective_date,T6.StatusEffectiveDate FROM(SELECT max(StatusEffectiveDate) StatusEffectiveDatemax,StatusLookUpID FROM public_schools ps WHERE Date(ps.SchoolEstablishmentDate < ?)=(SELECT ps2.ChartCloseOutDate AS ChartClosetmp FROM public?SchoolPublic ps2 WHERE status_public_type_id_=`public schools status`)AND  `public_schools status`.`status code` != "Operativetype" AND `school status type lookup charts`.status_effective_date="000-00-00-NULL") T5 JOIN(`schools_types` T4,`counties_states` CT,COUNTY_CODES COE, 'charter school status lookup chart?TSC,'T6 `School Type Lookup Chart`)GROUP BY(T4.CEO,T6.Statuas_effective_date=?);
SELECT T2.mailing_Street_address ,  T1.school_name FROM school_demographics AS T1 JOIN math_details AS T2 ON T1..school_name  =  T2.school_name ORDER BY avg_math_score DESC LIMIT 6 ,  1
SELECT T1.mailingStreetAddress ,  T1.schoolName FROM schools AS T1 JOIN testscores_subjects AS T2 ON T1.id = T2.sid GROUP BY T1.id ORDER BY AVG(reading) LIMIT 1
SELECT COUNT(*) FROM schools WHERE MailingCity = "Lakeport" AND (AvgScrSATMth + AvgScrSATEWr + AvgScrSATSbj) >= 1500;
SELECT COUNT(*) FROM test_scores JOIN students USING (student_id) JOIN schools USING(school_id) WHERE mailing_city = 'Fresno';
SELECT `school_name`, `mail_city_cd` FROM `schools` WHERE `admin_name` = 'Avetik Atoian'
SELECT CAST(SUM(CASE WHEN County_Name = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County_Name = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE Mailing_State = 'CA';
SELECT COUNT(*) FROM schools WHERE `School Status` = 'Active' AND Mailing_city = 'San Joaquin' AND Mailing_state = 'CA'
